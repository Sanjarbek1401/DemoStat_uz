import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Respublika region
respublika_region, _ = Region.objects.get_or_create(name='Respublika', defaults={'svg_id': 'respublika'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "17527138",
    "2022": "17880410",
    "2023": "18231955",
    "2024": "18578286",
    "2025": "18919317",
    "2026": "19253935",
    "2027": "19581217",
    "2028": "19901690",
    "2029": "20213486",
    "2030": "20515518",
    "2031": "20806577",
    "2032": "21086381",
    "2033": "21355049",
    "2034": "21611333",
    "2035": "21857084",
    "2036": "22092456",
    "2037": "22319615",
    "2038": "22539620",
    "2039": "22754175",
    "2040": "22965644",
    "2041": "23177097",
    "2042": "23390644",
    "2043": "23607252",
    "2044": "23827552",
    "2045": "24052632",
    "2046": "24282265",
    "2047": "24515907",
    "2048": "24753068",
    "2049": "24992604",
    "2050": "25233165",
    "Age": "Total"
  },
  {
    "2021": "1888673",
    "2022": "1998555",
    "2023": "2089438",
    "2024": "2148965",
    "2025": "2185049",
    "2026": "2196630",
    "2027": "2184993",
    "2028": "2167966",
    "2029": "2147430",
    "2030": "2122392",
    "2031": "2092744",
    "2032": "2059145",
    "2033": "2021089",
    "2034": "1979329",
    "2035": "1936877",
    "2036": "1895180",
    "2037": "1856716",
    "2038": "1822472",
    "2039": "1795358",
    "2040": "1775817",
    "2041": "1766669",
    "2042": "1767824",
    "2043": "1779129",
    "2044": "1799486",
    "2045": "1827653",
    "2046": "1860353",
    "2047": "1894941",
    "2048": "1930012",
    "2049": "1963842",
    "2050": "1993970",
    "Age": "0-4"
  },
  {
    "2021": "1650440",
    "2022": "1673769",
    "2023": "1703799",
    "2024": "1744251",
    "2025": "1798625",
    "2026": "1876744",
    "2027": "1984851",
    "2028": "2074309",
    "2029": "2133038",
    "2030": "2168898",
    "2031": "2180766",
    "2032": "2169796",
    "2033": "2153601",
    "2034": "2133961",
    "2035": "2109881",
    "2036": "2081253",
    "2037": "2048730",
    "2038": "2011809",
    "2039": "1971238",
    "2040": "1929997",
    "2041": "1889510",
    "2042": "1852219",
    "2043": "1819074",
    "2044": "1792944",
    "2045": "1774232",
    "2046": "1765723",
    "2047": "1767314",
    "2048": "1778858",
    "2049": "1799279",
    "2050": "1827365",
    "Age": "5-9"
  },
  {
    "2021": "1528150",
    "2022": "1539837",
    "2023": "1545469",
    "2024": "1567176",
    "2025": "1602692",
    "2026": "1642909",
    "2027": "1665970",
    "2028": "1695724",
    "2029": "1735740",
    "2030": "1789470",
    "2031": "1866627",
    "2032": "1973559",
    "2033": "2062070",
    "2034": "2120288",
    "2035": "2156025",
    "2036": "2168124",
    "2037": "2157664",
    "2038": "2142104",
    "2039": "2123166",
    "2040": "2099863",
    "2041": "2072093",
    "2042": "2040505",
    "2043": "2004583",
    "2044": "1965047",
    "2045": "1924831",
    "2046": "1885314",
    "2047": "1848905",
    "2048": "1816530",
    "2049": "1791037",
    "2050": "1772818",
    "Age": "10-14"
  },
  {
    "2021": "1272272",
    "2022": "1311434",
    "2023": "1381072",
    "2024": "1435812",
    "2025": "1487417",
    "2026": "1519439",
    "2027": "1530802",
    "2028": "1536444",
    "2029": "1558214",
    "2030": "1593652",
    "2031": "1633675",
    "2032": "1656545",
    "2033": "1686059",
    "2034": "1725787",
    "2035": "1779160",
    "2036": "1855642",
    "2037": "1961479",
    "2038": "2048924",
    "2039": "2106486",
    "2040": "2141962",
    "2041": "2154209",
    "2042": "2144302",
    "2043": "2129507",
    "2044": "2111394",
    "2045": "2088949",
    "2046": "2062053",
    "2047": "2031334",
    "2048": "1996277",
    "2049": "1957596",
    "2050": "1918205",
    "Age": "15-19"
  },
  {
    "2021": "1291424",
    "2022": "1264215",
    "2023": "1249848",
    "2024": "1253257",
    "2025": "1258962",
    "2026": "1281196",
    "2027": "1319090",
    "2028": "1386200",
    "2029": "1437876",
    "2030": "1486250",
    "2031": "1515929",
    "2032": "1526997",
    "2033": "1533800",
    "2034": "1556521",
    "2035": "1591564",
    "2036": "1630179",
    "2037": "1651764",
    "2038": "1680595",
    "2039": "1720068",
    "2040": "1772735",
    "2041": "1846696",
    "2042": "1948225",
    "2043": "2031603",
    "2044": "2086653",
    "2045": "2121190",
    "2046": "2134135",
    "2047": "2126280",
    "2048": "2114017",
    "2049": "2098446",
    "2050": "2078545",
    "Age": "20-24"
  },
  {
    "2021": "1545279",
    "2022": "1507239",
    "2023": "1454860",
    "2024": "1414379",
    "2025": "1357083",
    "2026": "1312366",
    "2027": "1289361",
    "2028": "1277750",
    "2029": "1282681",
    "2030": "1289091",
    "2031": "1310773",
    "2032": "1346022",
    "2033": "1408984",
    "2034": "1456870",
    "2035": "1502839",
    "2036": "1531851",
    "2037": "1543540",
    "2038": "1550963",
    "2039": "1573260",
    "2040": "1607067",
    "2041": "1645013",
    "2042": "1667003",
    "2043": "1695999",
    "2044": "1734484",
    "2045": "1784825",
    "2046": "1854745",
    "2047": "1951227",
    "2048": "2030561",
    "2049": "2083464",
    "2050": "2117459",
    "Age": "25-29"
  },
  {
    "2021": "1545522",
    "2022": "1555866",
    "2023": "1561888",
    "2024": "1563982",
    "2025": "1565201",
    "2026": "1532801",
    "2027": "1498667",
    "2028": "1450772",
    "2029": "1414806",
    "2030": "1362084",
    "2031": "1321312",
    "2032": "1301090",
    "2033": "1291175",
    "2034": "1296942",
    "2035": "1303676",
    "2036": "1324883",
    "2037": "1358487",
    "2038": "1419016",
    "2039": "1464839",
    "2040": "1509584",
    "2041": "1538386",
    "2042": "1550731",
    "2043": "1558979",
    "2044": "1581599",
    "2045": "1615231",
    "2046": "1653127",
    "2047": "1675352",
    "2048": "1704119",
    "2049": "1741582",
    "2050": "1790087",
    "Age": "30-34"
  },
  {
    "2021": "1370420",
    "2022": "1426524",
    "2023": "1466536",
    "2024": "1484815",
    "2025": "1497580",
    "2026": "1518599",
    "2027": "1528828",
    "2028": "1535514",
    "2029": "1538724",
    "2030": "1541664",
    "2031": "1511973",
    "2032": "1481069",
    "2033": "1436590",
    "2034": "1403896",
    "2035": "1354411",
    "2036": "1316360",
    "2037": "1298017",
    "2038": "1289245",
    "2039": "1295618",
    "2040": "1302683",
    "2041": "1323776",
    "2042": "1356556",
    "2043": "1415722",
    "2044": "1460450",
    "2045": "1504607",
    "2046": "1533443",
    "2047": "1546297",
    "2048": "1555007",
    "2049": "1577552",
    "2050": "1610597",
    "Age": "35-39"
  },
  {
    "2021": "1104319",
    "2022": "1143116",
    "2023": "1184038",
    "2024": "1228495",
    "2025": "1288250",
    "2026": "1346132",
    "2027": "1400155",
    "2028": "1439027",
    "2029": "1457060",
    "2030": "1469864",
    "2031": "1490906",
    "2032": "1501514",
    "2033": "1508962",
    "2034": "1513072",
    "2035": "1517159",
    "2036": "1489253",
    "2037": "1460451",
    "2038": "1418235",
    "2039": "1387691",
    "2040": "1340414",
    "2041": "1304263",
    "2042": "1287317",
    "2043": "1279510",
    "2044": "1286496",
    "2045": "1293976",
    "2046": "1315096",
    "2047": "1347335",
    "2048": "1405460",
    "2049": "1449273",
    "2050": "1492769",
    "Age": "40-44"
  },
  {
    "2021": "978991",
    "2022": "989317",
    "2023": "1008477",
    "2024": "1037845",
    "2025": "1062147",
    "2026": "1086447",
    "2027": "1124114",
    "2028": "1163843",
    "2029": "1207007",
    "2030": "1265209",
    "2031": "1321595",
    "2032": "1374402",
    "2033": "1412628",
    "2034": "1430600",
    "2035": "1443530",
    "2036": "1464641",
    "2037": "1475551",
    "2038": "1483507",
    "2039": "1488215",
    "2040": "1493124",
    "2041": "1466641",
    "2042": "1439488",
    "2043": "1399070",
    "2044": "1370202",
    "2045": "1324713",
    "2046": "1290063",
    "2047": "1274166",
    "2048": "1266998",
    "2049": "1274300",
    "2050": "1281913",
    "Age": "45-49"
  },
  {
    "2021": "860344",
    "2022": "887301",
    "2023": "902977",
    "2024": "927127",
    "2025": "942348",
    "2026": "959195",
    "2027": "969264",
    "2028": "987989",
    "2029": "1016723",
    "2030": "1040525",
    "2031": "1064370",
    "2032": "1101245",
    "2033": "1140095",
    "2034": "1182267",
    "2035": "1239161",
    "2036": "1294260",
    "2037": "1345968",
    "2038": "1383567",
    "2039": "1401463",
    "2040": "1414553",
    "2041": "1435812",
    "2042": "1447114",
    "2043": "1455618",
    "2044": "1460919",
    "2045": "1466590",
    "2046": "1441443",
    "2047": "1415700",
    "2048": "1376777",
    "2049": "1349201",
    "2050": "1305183",
    "Age": "50-54"
  },
  {
    "2021": "802319",
    "2022": "797744",
    "2023": "804019",
    "2024": "801422",
    "2025": "813338",
    "2026": "834558",
    "2027": "860735",
    "2028": "876029",
    "2029": "899505",
    "2030": "914464",
    "2031": "931210",
    "2032": "941266",
    "2033": "959693",
    "2034": "987824",
    "2035": "1011164",
    "2036": "1034598",
    "2037": "1070588",
    "2038": "1108477",
    "2039": "1149605",
    "2040": "1205064",
    "2041": "1258780",
    "2042": "1309282",
    "2043": "1346198",
    "2044": "1364060",
    "2045": "1377437",
    "2046": "1398925",
    "2047": "1410643",
    "2048": "1419595",
    "2049": "1425289",
    "2050": "1431528",
    "Age": "55-59"
  },
  {
    "2021": "682902",
    "2022": "713739",
    "2023": "732381",
    "2024": "746941",
    "2025": "755915",
    "2026": "758079",
    "2027": "754132",
    "2028": "760767",
    "2029": "758837",
    "2030": "770873",
    "2031": "791676",
    "2032": "817016",
    "2033": "832042",
    "2034": "854723",
    "2035": "869474",
    "2036": "886180",
    "2037": "896310",
    "2038": "914428",
    "2039": "941822",
    "2040": "964636",
    "2041": "987667",
    "2042": "1022593",
    "2043": "1059378",
    "2044": "1099329",
    "2045": "1153038",
    "2046": "1205046",
    "2047": "1253961",
    "2048": "1289862",
    "2049": "1307478",
    "2050": "1320995",
    "Age": "60-64"
  },
  {
    "2021": "440702",
    "2022": "468213",
    "2023": "509275",
    "2024": "546946",
    "2025": "585336",
    "2026": "619696",
    "2027": "647904",
    "2028": "665311",
    "2029": "679144",
    "2030": "688127",
    "2031": "691079",
    "2032": "688369",
    "2033": "695694",
    "2034": "694902",
    "2035": "707228",
    "2036": "727561",
    "2037": "751843",
    "2038": "766609",
    "2039": "788278",
    "2040": "802840",
    "2041": "819534",
    "2042": "829885",
    "2043": "847723",
    "2044": "874248",
    "2045": "896481",
    "2046": "919038",
    "2047": "952527",
    "2048": "987773",
    "2049": "1026030",
    "2050": "1077185",
    "Age": "65-69"
  },
  {
    "2021": "280454",
    "2022": "302261",
    "2023": "320140",
    "2024": "339504",
    "2025": "352083",
    "2026": "379207",
    "2027": "403521",
    "2028": "439592",
    "2029": "472737",
    "2030": "506658",
    "2031": "537366",
    "2032": "562724",
    "2033": "578962",
    "2034": "592149",
    "2035": "601298",
    "2036": "605301",
    "2037": "604183",
    "2038": "612256",
    "2039": "612834",
    "2040": "625361",
    "2041": "644985",
    "2042": "667861",
    "2043": "682320",
    "2044": "702695",
    "2045": "716996",
    "2046": "733553",
    "2047": "744087",
    "2048": "761400",
    "2049": "786562",
    "2050": "807782",
    "Age": "70-74"
  },
  {
    "2021": "142575",
    "2022": "148796",
    "2023": "163071",
    "2024": "181415",
    "2025": "206915",
    "2026": "221316",
    "2027": "239119",
    "2028": "253561",
    "2029": "269494",
    "2030": "280641",
    "2031": "303321",
    "2032": "324028",
    "2033": "354218",
    "2034": "382071",
    "2035": "410703",
    "2036": "437036",
    "2037": "458929",
    "2038": "473657",
    "2039": "485869",
    "2040": "494955",
    "2041": "499935",
    "2042": "500488",
    "2043": "509118",
    "2044": "511139",
    "2045": "523620",
    "2046": "542055",
    "2047": "562827",
    "2048": "576545",
    "2049": "594852",
    "2050": "608394",
    "Age": "75-79"
  },
  {
    "2021": "95817",
    "2022": "102386",
    "2023": "100366",
    "2024": "97005",
    "2025": "97239",
    "2026": "97735",
    "2027": "103215",
    "2028": "113599",
    "2029": "126723",
    "2030": "145350",
    "2031": "155878",
    "2032": "169287",
    "2033": "180101",
    "2034": "192298",
    "2035": "201688",
    "2036": "219264",
    "2037": "235729",
    "2038": "259089",
    "2039": "280754",
    "2040": "303117",
    "2041": "324099",
    "2042": "341697",
    "2043": "354262",
    "2044": "364945",
    "2045": "373479",
    "2046": "379033",
    "2047": "381018",
    "2048": "389597",
    "2049": "392706",
    "2050": "404353",
    "Age": "80-84"
  },
  {
    "2021": "46535",
    "2022": "50096",
    "2023": "54301",
    "2024": "58950",
    "2025": "63136",
    "2026": "70886",
    "2027": "76496",
    "2028": "77294",
    "2029": "77747",
    "2030": "80305",
    "2031": "85378",
    "2032": "92308",
    "2033": "99286",
    "2034": "107832",
    "2035": "121250",
    "2036": "130891",
    "2037": "143665",
    "2038": "154667",
    "2039": "167612",
    "2040": "181872",
    "2041": "199031",
    "2042": "217555",
    "2043": "239456",
    "2044": "261463",
    "2045": "284784",
    "2046": "309121",
    "2047": "331993",
    "2048": "353677",
    "2049": "374113",
    "2050": "394018",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Respublika female data
StatisticsData.objects.filter(region=respublika_region, gender='ayol').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=respublika_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='ayol',
                    population=population
                )

print("Respublika female data import completed successfully!")
