import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_city_region, _ = Region.objects.get_or_create(name='Buxoro', defaults={'svg_id': 'bukhara'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "1976822",
    "2022": "2009830",
    "2023": "2042281",
    "2024": "2073836",
    "2025": "2104529",
    "2026": "2134247",
    "2027": "2162855",
    "2028": "2190433",
    "2029": "2216861",
    "2030": "2242075",
    "2031": "2265988",
    "2032": "2288571",
    "2033": "2309846",
    "2034": "2329730",
    "2035": "2348435",
    "2036": "2365092",
    "2037": "2382612",
    "2038": "2398393",
    "2039": "2413474",
    "2040": "2428060",
    "2041": "2442411",
    "2042": "2456701",
    "2043": "2471004",
    "2044": "2485371",
    "2045": "2499893",
    "2046": "2514548",
    "2047": "2529298",
    "2048": "2544094",
    "2049": "2558848",
    "2050": "2573435",
    "Age": "Total"
  },
  {
    "2021": "199307",
    "2022": "207829",
    "2023": "213103",
    "2024": "216998",
    "2025": "219699",
    "2026": "220674",
    "2027": "218592",
    "2028": "215896",
    "2029": "212833",
    "2030": "209328",
    "2031": "205421",
    "2032": "201239",
    "2033": "196735",
    "2034": "191948",
    "2035": "187161",
    "2036": "182521",
    "2037": "178272",
    "2038": "174487",
    "2039": "171403",
    "2040": "169007",
    "2041": "167517",
    "2042": "166889",
    "2043": "167103",
    "2044": "168060",
    "2045": "169657",
    "2046": "171610",
    "2047": "173698",
    "2048": "175814",
    "2049": "177815",
    "2050": "179491",
    "Age": "0-4"
  },
  {
    "2021": "181191",
    "2022": "183661",
    "2023": "187272",
    "2024": "190262",
    "2025": "192990",
    "2026": "197799",
    "2027": "206172",
    "2028": "211335",
    "2029": "215163",
    "2030": "217832",
    "2031": "218817",
    "2032": "216791",
    "2033": "214174",
    "2034": "211200",
    "2035": "207793",
    "2036": "203992",
    "2037": "199922",
    "2038": "195534",
    "2039": "190867",
    "2040": "186198",
    "2041": "181674",
    "2042": "177533",
    "2043": "173847",
    "2044": "170849",
    "2045": "168526",
    "2046": "167091",
    "2047": "166503",
    "2048": "166739",
    "2049": "167705",
    "2050": "169298",
    "Age": "5-9"
  },
  {
    "2021": "164398",
    "2022": "165924",
    "2023": "168274",
    "2024": "170996",
    "2025": "175053",
    "2026": "180081",
    "2027": "182488",
    "2028": "186042",
    "2029": "188982",
    "2030": "191664",
    "2031": "196402",
    "2032": "204684",
    "2033": "209779",
    "2034": "213573",
    "2035": "216230",
    "2036": "217235",
    "2037": "215261",
    "2038": "212713",
    "2039": "209814",
    "2040": "206489",
    "2041": "202775",
    "2042": "198797",
    "2043": "194505",
    "2044": "189937",
    "2045": "185365",
    "2046": "180934",
    "2047": "176878",
    "2048": "173266",
    "2049": "170332",
    "2050": "168058",
    "Age": "10-14"
  },
  {
    "2021": "143034",
    "2022": "145950",
    "2023": "151585",
    "2024": "157168",
    "2025": "161405",
    "2026": "163273",
    "2027": "164753",
    "2028": "167064",
    "2029": "169752",
    "2030": "173766",
    "2031": "178740",
    "2032": "181101",
    "2033": "184617",
    "2034": "187531",
    "2035": "190194",
    "2036": "194888",
    "2037": "203092",
    "2038": "208128",
    "2039": "211890",
    "2040": "214532",
    "2041": "215549",
    "2042": "213625",
    "2043": "211147",
    "2044": "208324",
    "2045": "205080",
    "2046": "201450",
    "2047": "197558",
    "2048": "193353",
    "2049": "188871",
    "2050": "184384",
    "Age": "15-19"
  },
  {
    "2021": "142076",
    "2022": "139941",
    "2023": "138404",
    "2024": "139342",
    "2025": "140841",
    "2026": "142168",
    "2027": "145006",
    "2028": "150460",
    "2029": "155835",
    "2030": "159003",
    "2031": "161660",
    "2032": "163093",
    "2033": "165398",
    "2034": "168073",
    "2035": "172004",
    "2036": "176828",
    "2037": "179067",
    "2038": "182516",
    "2039": "185409",
    "2040": "188054",
    "2041": "192638",
    "2042": "200643",
    "2043": "205512",
    "2044": "209170",
    "2045": "211759",
    "2046": "212806",
    "2047": "211008",
    "2048": "208697",
    "2049": "206048",
    "2050": "202981",
    "Age": "20-24"
  },
  {
    "2021": "171638",
    "2022": "165341",
    "2023": "159082",
    "2024": "151536",
    "2025": "144960",
    "2026": "141532",
    "2027": "139553",
    "2028": "138129",
    "2029": "139103",
    "2030": "140590",
    "2031": "141879",
    "2032": "144585",
    "2033": "149801",
    "2034": "154936",
    "2035": "158853",
    "2036": "160567",
    "2037": "161995",
    "2038": "164260",
    "2039": "166844",
    "2040": "170632",
    "2041": "175325",
    "2042": "177507",
    "2043": "180916",
    "2044": "183760",
    "2045": "186327",
    "2046": "190731",
    "2047": "198478",
    "2048": "203150",
    "2049": "206699",
    "2050": "209247",
    "Age": "25-29"
  },
  {
    "2021": "176292",
    "2022": "177394",
    "2023": "177057",
    "2024": "175721",
    "2025": "174755",
    "2026": "169004",
    "2027": "163019",
    "2028": "157117",
    "2029": "149962",
    "2030": "143729",
    "2031": "140531",
    "2032": "138709",
    "2033": "137301",
    "2034": "138395",
    "2035": "139872",
    "2036": "141135",
    "2037": "143751",
    "2038": "148799",
    "2039": "153765",
    "2040": "157582",
    "2041": "159274",
    "2042": "160704",
    "2043": "162947",
    "2044": "165483",
    "2045": "169186",
    "2046": "173793",
    "2047": "175927",
    "2048": "179282",
    "2049": "182064",
    "2050": "184551",
    "Age": "30-34"
  },
  {
    "2021": "156292",
    "2022": "162663",
    "2023": "166972",
    "2024": "168481",
    "2025": "170427",
    "2026": "172548",
    "2027": "173577",
    "2028": "173239",
    "2029": "173752",
    "2030": "171186",
    "2031": "165690",
    "2032": "160031",
    "2033": "154468",
    "2034": "147673",
    "2035": "141750",
    "2036": "138758",
    "2037": "137075",
    "2038": "135849",
    "2039": "136883",
    "2040": "138358",
    "2041": "139608",
    "2042": "142160",
    "2043": "147082",
    "2044": "151918",
    "2045": "155660",
    "2046": "157341",
    "2047": "158774",
    "2048": "160993",
    "2049": "163473",
    "2050": "167081",
    "Age": "35-39"
  },
  {
    "2021": "127697",
    "2022": "131358",
    "2023": "134612",
    "2024": "139279",
    "2025": "146334",
    "2026": "153018",
    "2027": "159145",
    "2028": "163306",
    "2029": "164752",
    "2030": "166649",
    "2031": "168727",
    "2032": "169762",
    "2033": "169477",
    "2034": "170061",
    "2035": "167621",
    "2036": "162395",
    "2037": "157001",
    "2038": "151709",
    "2039": "145198",
    "2040": "139518",
    "2041": "136683",
    "2042": "135110",
    "2043": "133964",
    "2044": "135027",
    "2045": "136506",
    "2046": "137748",
    "2047": "140251",
    "2048": "145070",
    "2049": "149800",
    "2050": "153474",
    "Age": "40-44"
  },
  {
    "2021": "120247",
    "2022": "118477",
    "2023": "119987",
    "2024": "122443",
    "2025": "123987",
    "2026": "125071",
    "2027": "128622",
    "2028": "131768",
    "2029": "136292",
    "2030": "143151",
    "2031": "149647",
    "2032": "155618",
    "2033": "159690",
    "2034": "161115",
    "2035": "163003",
    "2036": "165072",
    "2037": "166130",
    "2038": "165897",
    "2039": "166536",
    "2040": "164227",
    "2041": "159203",
    "2042": "154029",
    "2043": "148958",
    "2044": "142684",
    "2045": "137214",
    "2046": "134518",
    "2047": "133041",
    "2048": "131959",
    "2049": "133037",
    "2050": "134512",
    "Age": "45-49"
  },
  {
    "2021": "105310",
    "2022": "110365",
    "2023": "112213",
    "2024": "115227",
    "2025": "116594",
    "2026": "117094",
    "2027": "115378",
    "2028": "116866",
    "2029": "119269",
    "2030": "120789",
    "2031": "121865",
    "2032": "125343",
    "2033": "128420",
    "2034": "132838",
    "2035": "139530",
    "2036": "145863",
    "2037": "151696",
    "2038": "155688",
    "2039": "157102",
    "2040": "158990",
    "2041": "161061",
    "2042": "162150",
    "2043": "161972",
    "2044": "162661",
    "2045": "160482",
    "2046": "155656",
    "2047": "150693",
    "2048": "145824",
    "2049": "139774",
    "2050": "134504",
    "Age": "50-54"
  },
  {
    "2021": "97231",
    "2022": "96449",
    "2023": "97007",
    "2024": "96174",
    "2025": "97953",
    "2026": "101402",
    "2027": "106270",
    "2028": "108041",
    "2029": "110940",
    "2030": "112276",
    "2031": "112825",
    "2032": "111230",
    "2033": "112725",
    "2034": "115090",
    "2035": "116607",
    "2036": "117701",
    "2037": "121104",
    "2038": "124120",
    "2039": "128434",
    "2040": "134943",
    "2041": "141094",
    "2042": "146766",
    "2043": "150664",
    "2044": "152069",
    "2045": "153971",
    "2046": "156050",
    "2047": "157176",
    "2048": "157055",
    "2049": "157783",
    "2050": "155742",
    "Age": "55-59"
  },
  {
    "2021": "81555",
    "2022": "86229",
    "2023": "88679",
    "2024": "90752",
    "2025": "91214",
    "2026": "91266",
    "2027": "90558",
    "2028": "91162",
    "2029": "90422",
    "2030": "92173",
    "2031": "95501",
    "2032": "100155",
    "2033": "101864",
    "2034": "104634",
    "2035": "105955",
    "2036": "106591",
    "2037": "105178",
    "2038": "106694",
    "2039": "109017",
    "2040": "110536",
    "2041": "111665",
    "2042": "114972",
    "2043": "117917",
    "2044": "122107",
    "2045": "128383",
    "2046": "134302",
    "2047": "139761",
    "2048": "143526",
    "2049": "144912",
    "2050": "146817",
    "Age": "60-64"
  },
  {
    "2021": "50867",
    "2022": "53478",
    "2023": "58411",
    "2024": "63016",
    "2025": "68177",
    "2026": "73694",
    "2027": "77939",
    "2028": "80212",
    "2029": "82157",
    "2030": "82670",
    "2031": "82836",
    "2032": "82286",
    "2033": "82984",
    "2034": "82407",
    "2035": "84149",
    "2036": "87339",
    "2037": "91730",
    "2038": "93388",
    "2039": "96014",
    "2040": "87336",
    "2041": "98082",
    "2042": "96907",
    "2043": "98446",
    "2044": "100719",
    "2045": "102248",
    "2046": "103423",
    "2047": "106604",
    "2048": "109457",
    "2049": "113474",
    "2050": "119433",
    "Age": "65-69"
  },
  {
    "2021": "30038",
    "2022": "33617",
    "2023": "36518",
    "2024": "39048",
    "2025": "41295",
    "2026": "43772",
    "2027": "46085",
    "2028": "50456",
    "2029": "54520",
    "2030": "59092",
    "2031": "63972",
    "2032": "67749",
    "2033": "69852",
    "2034": "71676",
    "2035": "72272",
    "2036": "72588",
    "2037": "72239",
    "2038": "73043",
    "2039": "72666",
    "2040": "74383",
    "2041": "77400",
    "2042": "81464",
    "2043": "83069",
    "2044": "85508",
    "2045": "86819",
    "2046": "87676",
    "2047": "86779",
    "2048": "88321",
    "2049": "90508",
    "2050": "92020",
    "Age": "70-74"
  },
  {
    "2021": "14963",
    "2022": "14919",
    "2023": "16438",
    "2024": "18613",
    "2025": "21363",
    "2026": "23827",
    "2027": "26728",
    "2028": "29075",
    "2029": "31154",
    "2030": "33054",
    "2031": "35131",
    "2032": "37120",
    "2033": "40834",
    "2034": "44271",
    "2035": "48155",
    "2036": "52281",
    "2037": "55498",
    "2038": "57396",
    "2039": "59055",
    "2040": "59726",
    "2041": "60192",
    "2042": "60061",
    "2043": "60957",
    "2044": "60803",
    "2045": "62463",
    "2046": "65243",
    "2047": "68872",
    "2048": "70384",
    "2049": "72553",
    "2050": "73811",
    "Age": "75-79"
  },
  {
    "2021": "10947",
    "2022": "11824",
    "2023": "11433",
    "2024": "10924",
    "2025": "10695",
    "2026": "10293",
    "2027": "10394",
    "2028": "11535",
    "2029": "13132",
    "2030": "15168",
    "2031": "16962",
    "2032": "19122",
    "2033": "20875",
    "2034": "22486",
    "2035": "23979",
    "2036": "25608",
    "2037": "27221",
    "2038": "30163",
    "2039": "32873",
    "2040": "35944",
    "2041": "39189",
    "2042": "41745",
    "2043": "43364",
    "2044": "44793",
    "2045": "45499",
    "2046": "46074",
    "2047": "46148",
    "2048": "47077",
    "2049": "47127",
    "2050": "48646",
    "Age": "80-84"
  },
  {
    "2021": "3739",
    "2022": "4411",
    "2023": "5232",
    "2024": "6057",
    "2025": "6787",
    "2026": "7732",
    "2027": "8576",
    "2028": "8730",
    "2029": "8838",
    "2030": "9087",
    "2031": "9382",
    "2032": "9952",
    "2033": "10761",
    "2034": "11842",
    "2035": "13307",
    "2036": "14630",
    "2037": "16382",
    "2038": "18009",
    "2039": "19706",
    "2040": "21606",
    "2041": "23483",
    "2042": "25640",
    "2043": "28634",
    "2044": "31498",
    "2045": "34750",
    "2046": "38100",
    "2047": "41151",
    "2048": "44128",
    "2049": "46876",
    "2050": "49386",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_city_region, gender='jami').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_city_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='jami',
                    population=population
                )

print("Navoi female data import completed successfully!")
