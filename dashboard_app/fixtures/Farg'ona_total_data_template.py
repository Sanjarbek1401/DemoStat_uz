import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_city_region, _ = Region.objects.get_or_create(name='Farg\'ona', defaults={'svg_id': 'fergana'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "3896395",
    "2022": "3972983",
    "2023": "4048763",
    "2024": "4123153",
    "2025": "4196253",
    "2026": "4268086",
    "2027": "4338500",
    "2028": "4407459",
    "2029": "4474448",
    "2030": "4539209",
    "2031": "4601408",
    "2032": "4661036",
    "2033": "4718206",
    "2034": "4772700",
    "2035": "4824926",
    "2036": "4874870",
    "2037": "4923032",
    "2038": "4969663",
    "2039": "5015181",
    "2040": "5060110",
    "2041": "5105116",
    "2042": "5150626",
    "2043": "5196802",
    "2044": "5243715",
    "2045": "5291567",
    "2046": "5340291",
    "2047": "5389760",
    "2048": "5439851",
    "2049": "5490310",
    "2050": "5540851",
    "Age": "Total"
  },
  {
    "2021": "430288",
    "2022": "453414",
    "2023": "470294",
    "2024": "480151",
    "2025": "483013",
    "2026": "481359",
    "2027": "478929",
    "2028": "475678",
    "2029": "471759",
    "2030": "466823",
    "2031": "460543",
    "2032": "453072",
    "2033": "444576",
    "2034": "435334",
    "2035": "426033",
    "2036": "417011",
    "2037": "408784",
    "2038": "401524",
    "2039": "395861",
    "2040": "361915",
    "2041": "390328",
    "2042": "391029",
    "2043": "393891",
    "2044": "398591",
    "2045": "404809",
    "2046": "411812",
    "2047": "419042",
    "2048": "426241",
    "2049": "433083",
    "2050": "439074",
    "Age": "0-4"
  },
  {
    "2021": "368242",
    "2022": "375188",
    "2023": "382864",
    "2024": "393778",
    "2025": "408420",
    "2026": "427794",
    "2027": "450602",
    "2028": "467256",
    "2029": "477014",
    "2030": "479891",
    "2031": "478322",
    "2032": "476005",
    "2033": "472880",
    "2034": "469101",
    "2035": "464320",
    "2036": "458212",
    "2037": "450931",
    "2038": "442637",
    "2039": "433605",
    "2040": "424517",
    "2041": "415703",
    "2042": "407674",
    "2043": "400595",
    "2044": "395090",
    "2045": "391273",
    "2046": "389781",
    "2047": "390542",
    "2048": "393433",
    "2049": "398135",
    "2050": "404335",
    "Age": "5-9"
  },
  {
    "2021": "341006",
    "2022": "338217",
    "2023": "343146",
    "2024": "349470",
    "2025": "356746",
    "2026": "366757",
    "2027": "373613",
    "2028": "381202",
    "2029": "391996",
    "2030": "406474",
    "2031": "425641",
    "2032": "448239",
    "2033": "464749",
    "2034": "474451",
    "2035": "477353",
    "2036": "475860",
    "2037": "473638",
    "2038": "470617",
    "2039": "466953",
    "2040": "462301",
    "2041": "456340",
    "2042": "449220",
    "2043": "441098",
    "2044": "432243",
    "2045": "423328",
    "2046": "414678",
    "2047": "406799",
    "2048": "399852",
    "2049": "394457",
    "2050": "390724",
    "Age": "10-14"
  },
  {
    "2021": "278441",
    "2022": "292699",
    "2023": "307411",
    "2024": "316886",
    "2025": "331335",
    "2026": "339313",
    "2027": "336504",
    "2028": "341415",
    "2029": "347698",
    "2030": "354935",
    "2031": "364886",
    "2032": "371674",
    "2033": "379196",
    "2034": "389906",
    "2035": "404277",
    "2036": "423292",
    "2037": "445692",
    "2038": "462039",
    "2039": "471666",
    "2040": "474583",
    "2041": "473170",
    "2042": "471056",
    "2043": "468154",
    "2044": "464617",
    "2045": "460098",
    "2046": "454277",
    "2047": "447304",
    "2048": "439334",
    "2049": "430631",
    "2050": "421865",
    "Age": "15-19"
  },
  {
    "2021": "280022",
    "2022": "271239",
    "2023": "263934",
    "2024": "268091",
    "2025": "271298",
    "2026": "279072",
    "2027": "292967",
    "2028": "307268",
    "2029": "316359",
    "2030": "330351",
    "2031": "338052",
    "2032": "335306",
    "2033": "340298",
    "2034": "346594",
    "2035": "353765",
    "2036": "363500",
    "2037": "370062",
    "2038": "377446",
    "2039": "388053",
    "2040": "402248",
    "2041": "420872",
    "2042": "442693",
    "2043": "458562",
    "2044": "467984",
    "2045": "470961",
    "2046": "469777",
    "2047": "467948",
    "2048": "465339",
    "2049": "462091",
    "2050": "457867",
    "Age": "20-24"
  },
  {
    "2021": "359429",
    "2022": "347949",
    "2023": "333812",
    "2024": "318035",
    "2025": "297921",
    "2026": "282031",
    "2027": "273968",
    "2028": "267084",
    "2029": "271327",
    "2030": "274445",
    "2031": "281939",
    "2032": "295284",
    "2033": "309020",
    "2034": "317660",
    "2035": "331246",
    "2036": "338827",
    "2037": "336232",
    "2038": "341255",
    "2039": "347435",
    "2040": "354423",
    "2041": "363995",
    "2042": "370510",
    "2043": "377836",
    "2044": "388216",
    "2045": "401989",
    "2046": "420013",
    "2047": "441197",
    "2048": "456632",
    "2049": "465906",
    "2050": "468972",
    "Age": "25-29"
  },
  {
    "2021": "338091",
    "2022": "345921",
    "2023": "350328",
    "2024": "356865",
    "2025": "361848",
    "2026": "355796",
    "2027": "344901",
    "2028": "331530",
    "2029": "316651",
    "2030": "297511",
    "2031": "282429",
    "2032": "274913",
    "2033": "268342",
    "2034": "272624",
    "2035": "275690",
    "2036": "282966",
    "2037": "295917",
    "2038": "309270",
    "2039": "317623",
    "2040": "330943",
    "2041": "338463",
    "2042": "336017",
    "2043": "341103",
    "2044": "347249",
    "2045": "354162",
    "2046": "363642",
    "2047": "370102",
    "2048": "377330",
    "2049": "387487",
    "2050": "400907",
    "Age": "30-34"
  },
  {
    "2021": "290226",
    "2022": "303985",
    "2023": "316509",
    "2024": "321534",
    "2025": "325779",
    "2026": "333194",
    "2027": "340770",
    "2028": "345032",
    "2029": "351452",
    "2030": "356468",
    "2031": "350769",
    "2032": "340448",
    "2033": "327750",
    "2034": "313619",
    "2035": "295279",
    "2036": "280852",
    "2037": "273776",
    "2038": "267468",
    "2039": "271795",
    "2040": "274828",
    "2041": "281961",
    "2042": "294636",
    "2043": "307716",
    "2044": "315879",
    "2045": "329003",
    "2046": "336482",
    "2047": "334159",
    "2048": "339269",
    "2049": "345352",
    "2050": "352154",
    "Age": "35-39"
  },
  {
    "2021": "245365",
    "2022": "250322",
    "2023": "256868",
    "2024": "262226",
    "2025": "273696",
    "2026": "285693",
    "2027": "299033",
    "2028": "311244",
    "2029": "316152",
    "2030": "320335",
    "2031": "327627",
    "2032": "335082",
    "2033": "339299",
    "2034": "345669",
    "2035": "350730",
    "2036": "345321",
    "2037": "335451",
    "2038": "323276",
    "2039": "309720",
    "2040": "292005",
    "2041": "278090",
    "2042": "271360",
    "2043": "265276",
    "2044": "269651",
    "2045": "272682",
    "2046": "279715",
    "2047": "292176",
    "2048": "305032",
    "2049": "313037",
    "2050": "325980",
    "Age": "40-44"
  },
  {
    "2021": "228043",
    "2022": "228117",
    "2023": "229108",
    "2024": "234740",
    "2025": "238826",
    "2026": "241062",
    "2027": "245904",
    "2028": "252316",
    "2029": "257551",
    "2030": "268782",
    "2031": "280505",
    "2032": "293555",
    "2033": "305541",
    "2034": "310381",
    "2035": "314538",
    "2036": "321753",
    "2037": "329132",
    "2038": "333336",
    "2039": "339662",
    "2040": "344754",
    "2041": "339597",
    "2042": "330114",
    "2043": "318386",
    "2044": "305309",
    "2045": "288132",
    "2046": "274655",
    "2047": "268218",
    "2048": "262331",
    "2049": "266734",
    "2050": "269750",
    "Age": "45-49"
  },
  {
    "2021": "198399",
    "2022": "205262",
    "2023": "210357",
    "2024": "216391",
    "2025": "218817",
    "2026": "222495",
    "2027": "222600",
    "2028": "223613",
    "2029": "229160",
    "2030": "233191",
    "2031": "235439",
    "2032": "240215",
    "2033": "246530",
    "2034": "251690",
    "2035": "262703",
    "2036": "274174",
    "2037": "286943",
    "2038": "298706",
    "2039": "303485",
    "2040": "307629",
    "2041": "314786",
    "2042": "322110",
    "2043": "326328",
    "2044": "332610",
    "2045": "337725",
    "2046": "332818",
    "2047": "323709",
    "2048": "312404",
    "2049": "299774",
    "2050": "283121",
    "Age": "50-54"
  },
  {
    "2021": "178635",
    "2022": "179377",
    "2023": "181597",
    "2024": "182705",
    "2025": "185980",
    "2026": "191194",
    "2027": "197832",
    "2028": "202789",
    "2029": "208642",
    "2030": "211036",
    "2031": "214699",
    "2032": "214910",
    "2033": "216004",
    "2034": "221480",
    "2035": "225469",
    "2036": "227763",
    "2037": "232473",
    "2038": "238683",
    "2039": "243787",
    "2040": "254554",
    "2041": "265740",
    "2042": "278178",
    "2043": "289673",
    "2044": "294380",
    "2045": "298519",
    "2046": "305614",
    "2047": "312871",
    "2048": "317100",
    "2049": "323282",
    "2050": "328374",
    "Age": "55-59"
  },
  {
    "2021": "151775",
    "2022": "159095",
    "2023": "162540",
    "2024": "165179",
    "2025": "166831",
    "2026": "167569",
    "2027": "168362",
    "2028": "170594",
    "2029": "171732",
    "2030": "174968",
    "2031": "180039",
    "2032": "186428",
    "2033": "191251",
    "2034": "196888",
    "2035": "199277",
    "2036": "202942",
    "2037": "203318",
    "2038": "204541",
    "2039": "209928",
    "2040": "213863",
    "2041": "216235",
    "2042": "220858",
    "2043": "226936",
    "2044": "231988",
    "2045": "242428",
    "2046": "253236",
    "2047": "265218",
    "2048": "276325",
    "2049": "280906",
    "2050": "285006",
    "Age": "60-64"
  },
  {
    "2021": "92749",
    "2022": "98644",
    "2023": "109444",
    "2024": "119002",
    "2025": "128782",
    "2026": "136610",
    "2027": "143254",
    "2028": "146520",
    "2029": "149047",
    "2030": "150760",
    "2031": "151671",
    "2032": "152609",
    "2033": "154907",
    "2034": "156145",
    "2035": "159366",
    "2036": "164275",
    "2037": "170363",
    "2038": "175030",
    "2039": "180405",
    "2040": "182808",
    "2041": "186472",
    "2042": "187068",
    "2043": "188465",
    "2044": "193726",
    "2045": "197597",
    "2046": "200063",
    "2047": "204567",
    "2048": "210448",
    "2049": "215399",
    "2050": "225358",
    "Age": "65-69"
  },
  {
    "2021": "57237",
    "2022": "62327",
    "2023": "66388",
    "2024": "70207",
    "2025": "73096",
    "2026": "79287",
    "2027": "84473",
    "2028": "93926",
    "2029": "102263",
    "2030": "110851",
    "2031": "117814",
    "2032": "123722",
    "2033": "126827",
    "2034": "129265",
    "2035": "131074",
    "2036": "132205",
    "2037": "133325",
    "2038": "135692",
    "2039": "137043",
    "2040": "140218",
    "2041": "144901",
    "2042": "150594",
    "2043": "155059",
    "2044": "160087",
    "2045": "162488",
    "2046": "166103",
    "2047": "166931",
    "2048": "168491",
    "2049": "173534",
    "2050": "177261",
    "Age": "70-74"
  },
  {
    "2021": "29426",
    "2022": "30430",
    "2023": "33154",
    "2024": "36635",
    "2025": "41550",
    "2026": "44725",
    "2027": "48835",
    "2028": "52087",
    "2029": "55198",
    "2030": "57716",
    "2031": "62897",
    "2032": "67277",
    "2033": "75131",
    "2034": "82031",
    "2035": "89202",
    "2036": "95132",
    "2037": "100147",
    "2038": "103034",
    "2039": "105319",
    "2040": "107181",
    "2041": "108510",
    "2042": "109780",
    "2043": "112160",
    "2044": "113589",
    "2045": "116644",
    "2046": "120980",
    "2047": "126112",
    "2048": "130242",
    "2049": "134739",
    "2050": "137044",
    "Age": "75-79"
  },
  {
    "2021": "19657",
    "2022": "20606",
    "2023": "19895",
    "2024": "19138",
    "2025": "19375",
    "2026": "19831",
    "2027": "20719",
    "2028": "22670",
    "2029": "25143",
    "2030": "28750",
    "2031": "31112",
    "2032": "34157",
    "2033": "36556",
    "2034": "38911",
    "2035": "40985",
    "2036": "45004",
    "2037": "48453",
    "2038": "54477",
    "2039": "59750",
    "2040": "65282",
    "2041": "69970",
    "2042": "73924",
    "2043": "76452",
    "2044": "78478",
    "2045": "80280",
    "2046": "81702",
    "2047": "83030",
    "2048": "85274",
    "2049": "86680",
    "2050": "89441",
    "Age": "80-84"
  },
  {
    "2021": "9364",
    "2022": "10190",
    "2023": "11112",
    "2024": "12121",
    "2025": "12940",
    "2026": "14304",
    "2027": "15232",
    "2028": "15235",
    "2029": "15313",
    "2030": "15920",
    "2031": "17024",
    "2032": "18141",
    "2033": "19351",
    "2034": "20950",
    "2035": "23620",
    "2036": "25782",
    "2037": "28397",
    "2038": "30632",
    "2039": "33090",
    "2040": "36058",
    "2041": "39984",
    "2042": "43806",
    "2043": "49112",
    "2044": "54026",
    "2045": "59451",
    "2046": "64941",
    "2047": "69833",
    "2048": "74775",
    "2049": "79084",
    "2050": "83619",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_city_region, gender='jami').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_city_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='jami',
                    population=population
                )

print("Navoi female data import completed successfully!")
