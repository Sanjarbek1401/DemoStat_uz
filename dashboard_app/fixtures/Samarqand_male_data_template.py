import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_region, _ = Region.objects.get_or_create(name='Samarqand', defaults={'svg_id': 'samarkand'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "2028515",
    "2022": "2074342",
    "2023": "2119763",
    "2024": "2164351",
    "2025": "2208202",
    "2026": "2251240",
    "2027": "2293364",
    "2028": "2334680",
    "2029": "2374883",
    "2030": "2413787",
    "2031": "2451259",
    "2032": "2487285",
    "2033": "2521915",
    "2034": "2555011",
    "2035": "2586808",
    "2036": "2617334",
    "2037": "2646888",
    "2038": "2675630",
    "2039": "2703773",
    "2040": "2731629",
    "2041": "2759613",
    "2042": "2788020",
    "2043": "2816982",
    "2044": "2846599",
    "2045": "2877047",
    "2046": "2908301",
    "2047": "2940286",
    "2048": "2972943",
    "2049": "3006108",
    "2050": "3039571",
    "Age": "Total"
  },
  {
    "2021": "247632",
    "2022": "261020",
    "2023": "271059",
    "2024": "278820",
    "2025": "284317",
    "2026": "286807",
    "2027": "285453",
    "2028": "283527",
    "2029": "281176",
    "2030": "278159",
    "2031": "274434",
    "2032": "270105",
    "2033": "265140",
    "2034": "259701",
    "2035": "254206",
    "2036": "248842",
    "2037": "243940",
    "2038": "239608",
    "2039": "236218",
    "2040": "233836",
    "2041": "232851",
    "2042": "233240",
    "2043": "234989",
    "2044": "237984",
    "2045": "242089",
    "2046": "246871",
    "2047": "251973",
    "2048": "257201",
    "2049": "262304",
    "2050": "266920",
    "Age": "0-4"
  },
  {
    "2021": "215490",
    "2022": "219151",
    "2023": "224850",
    "2024": "229347",
    "2025": "235885",
    "2026": "245366",
    "2027": "258538",
    "2028": "268407",
    "2029": "276058",
    "2030": "281498",
    "2031": "283989",
    "2032": "282688",
    "2033": "280838",
    "2034": "278576",
    "2035": "275659",
    "2036": "272045",
    "2037": "267836",
    "2038": "263000",
    "2039": "257693",
    "2040": "252331",
    "2041": "247095",
    "2042": "242313",
    "2043": "238092",
    "2044": "234797",
    "2045": "232494",
    "2046": "231569",
    "2047": "231998",
    "2048": "233767",
    "2049": "236767",
    "2050": "240862",
    "Age": "5-9"
  },
  {
    "2021": "193765",
    "2022": "198414",
    "2023": "198991",
    "2024": "204184",
    "2025": "208984",
    "2026": "213956",
    "2027": "217546",
    "2028": "223176",
    "2029": "227606",
    "2030": "234064",
    "2031": "243431",
    "2032": "256469",
    "2033": "266233",
    "2034": "273820",
    "2035": "279234",
    "2036": "281740",
    "2037": "280491",
    "2038": "278709",
    "2039": "276519",
    "2040": "273683",
    "2041": "270159",
    "2042": "266047",
    "2043": "261314",
    "2044": "256114",
    "2045": "250858",
    "2046": "245725",
    "2047": "241040",
    "2048": "236905",
    "2049": "233686",
    "2050": "231444",
    "Age": "10-14"
  },
  {
    "2021": "161305",
    "2022": "164405",
    "2023": "174448",
    "2024": "181639",
    "2025": "188680",
    "2026": "192279",
    "2027": "196866",
    "2028": "197415",
    "2029": "202568",
    "2030": "207321",
    "2031": "212251",
    "2032": "215804",
    "2033": "221395",
    "2034": "225793",
    "2035": "232202",
    "2036": "241485",
    "2037": "254413",
    "2038": "264089",
    "2039": "271619",
    "2040": "277004",
    "2041": "279520",
    "2042": "278321",
    "2043": "276604",
    "2044": "274487",
    "2045": "271729",
    "2046": "268289",
    "2047": "264268",
    "2048": "259630",
    "2049": "254527",
    "2050": "249367",
    "Age": "15-19"
  },
  {
    "2021": "159170",
    "2022": "154818",
    "2023": "154557",
    "2024": "154334",
    "2025": "155873",
    "2026": "159981",
    "2027": "162995",
    "2028": "172890",
    "2029": "179936",
    "2030": "186861",
    "2031": "190383",
    "2032": "194924",
    "2033": "195470",
    "2034": "200593",
    "2035": "205297",
    "2036": "210176",
    "2037": "213686",
    "2038": "219230",
    "2039": "223590",
    "2040": "229938",
    "2041": "239105",
    "2042": "251879",
    "2043": "261429",
    "2044": "268877",
    "2045": "274223",
    "2046": "276755",
    "2047": "275629",
    "2048": "274008",
    "2049": "271992",
    "2050": "269341",
    "Age": "20-24"
  },
  {
    "2021": "191123",
    "2022": "186963",
    "2023": "179784",
    "2024": "173591",
    "2025": "164127",
    "2026": "157661",
    "2027": "153441",
    "2028": "153234",
    "2029": "153038",
    "2030": "154565",
    "2031": "158621",
    "2032": "161548",
    "2033": "171270",
    "2034": "178145",
    "2035": "184940",
    "2036": "188387",
    "2037": "192888",
    "2038": "193436",
    "2039": "198519",
    "2040": "203159",
    "2041": "207978",
    "2042": "211441",
    "2043": "216935",
    "2044": "221248",
    "2045": "227516",
    "2046": "236536",
    "2047": "249116",
    "2048": "258512",
    "2049": "265861",
    "2050": "271163",
    "Age": "25-29"
  },
  {
    "2021": "181256",
    "2022": "185633",
    "2023": "186582",
    "2024": "188299",
    "2025": "190684",
    "2026": "188078",
    "2027": "184055",
    "2028": "177093",
    "2029": "171158",
    "2030": "162001",
    "2031": "155796",
    "2032": "151752",
    "2033": "151625",
    "2034": "151476",
    "2035": "153003",
    "2036": "157012",
    "2037": "159856",
    "2038": "169404",
    "2039": "176117",
    "2040": "182792",
    "2041": "186175",
    "2042": "190643",
    "2043": "191197",
    "2044": "196241",
    "2045": "200826",
    "2046": "205598",
    "2047": "209026",
    "2048": "214470",
    "2049": "218735",
    "2050": "224916",
    "Age": "30-34"
  },
  {
    "2021": "153255",
    "2022": "159760",
    "2023": "166715",
    "2024": "170606",
    "2025": "174036",
    "2026": "177688",
    "2027": "181931",
    "2028": "182830",
    "2029": "184515",
    "2030": "186897",
    "2031": "184407",
    "2032": "180586",
    "2033": "173886",
    "2034": "168238",
    "2035": "159406",
    "2036": "153467",
    "2037": "149601",
    "2038": "149556",
    "2039": "149458",
    "2040": "150988",
    "2041": "154956",
    "2042": "157727",
    "2043": "167109",
    "2044": "173673",
    "2045": "180240",
    "2046": "183574",
    "2047": "188015",
    "2048": "188584",
    "2049": "193590",
    "2050": "198118",
    "Age": "35-39"
  },
  {
    "2021": "116807",
    "2022": "122883",
    "2023": "128045",
    "2024": "134764",
    "2025": "142058",
    "2026": "150040",
    "2027": "156321",
    "2028": "163084",
    "2029": "166865",
    "2030": "170219",
    "2031": "173798",
    "2032": "177980",
    "2033": "178890",
    "2034": "180588",
    "2035": "182996",
    "2036": "180633",
    "2037": "177012",
    "2038": "170562",
    "2039": "165169",
    "2040": "156627",
    "2041": "150917",
    "2042": "147209",
    "2043": "147235",
    "2044": "147189",
    "2045": "148727",
    "2046": "152660",
    "2047": "155376",
    "2048": "164611",
    "2049": "171052",
    "2050": "177529",
    "Age": "40-44"
  },
  {
    "2021": "97363",
    "2022": "99440",
    "2023": "102629",
    "2024": "106151",
    "2025": "110066",
    "2026": "114106",
    "2027": "120007",
    "2028": "125011",
    "2029": "131547",
    "2030": "138641",
    "2031": "146423",
    "2032": "152546",
    "2033": "159161",
    "2034": "162872",
    "2035": "166184",
    "2036": "169726",
    "2037": "173870",
    "2038": "174806",
    "2039": "176520",
    "2040": "178950",
    "2041": "176715",
    "2042": "173277",
    "2043": "167052",
    "2044": "161889",
    "2045": "153625",
    "2046": "148136",
    "2047": "144586",
    "2048": "144677",
    "2049": "144684",
    "2050": "146231",
    "Age": "45-49"
  },
  {
    "2021": "79012",
    "2022": "81455",
    "2023": "84082",
    "2024": "87912",
    "2025": "91353",
    "2026": "94321",
    "2027": "96334",
    "2028": "99433",
    "2029": "102856",
    "2030": "106666",
    "2031": "110601",
    "2032": "116342",
    "2033": "121205",
    "2034": "127566",
    "2035": "134469",
    "2036": "142054",
    "2037": "148024",
    "2038": "154487",
    "2039": "158131",
    "2040": "161405",
    "2041": "164916",
    "2042": "169021",
    "2043": "169992",
    "2044": "171723",
    "2045": "174175",
    "2046": "172081",
    "2047": "168838",
    "2048": "162849",
    "2049": "157919",
    "2050": "149956",
    "Age": "50-54"
  },
  {
    "2021": "77212",
    "2022": "76259",
    "2023": "74943",
    "2024": "73585",
    "2025": "73611",
    "2026": "75342",
    "2027": "77708",
    "2028": "80239",
    "2029": "83907",
    "2030": "87212",
    "2031": "90096",
    "2032": "92063",
    "2033": "95072",
    "2034": "98396",
    "2035": "102096",
    "2036": "105925",
    "2037": "111478",
    "2038": "116183",
    "2039": "122338",
    "2040": "129014",
    "2041": "136360",
    "2042": "142148",
    "2043": "148416",
    "2044": "151979",
    "2045": "155207",
    "2046": "158690",
    "2047": "162743",
    "2048": "163756",
    "2049": "165500",
    "2050": "167962",
    "Age": "55-59"
  },
  {
    "2021": "68573",
    "2022": "70769",
    "2023": "72145",
    "2024": "72343",
    "2025": "71949",
    "2026": "71166",
    "2027": "70358",
    "2028": "69232",
    "2029": "68055",
    "2030": "68168",
    "2031": "69877",
    "2032": "72164",
    "2033": "74587",
    "2034": "78052",
    "2035": "81191",
    "2036": "83975",
    "2037": "85891",
    "2038": "88789",
    "2039": "91983",
    "2040": "95537",
    "2041": "99225",
    "2042": "104523",
    "2043": "109014",
    "2044": "114890",
    "2045": "121261",
    "2046": "128281",
    "2047": "133818",
    "2048": "139811",
    "2049": "143256",
    "2050": "146409",
    "Age": "60-64"
  },
  {
    "2021": "42330",
    "2022": "45829",
    "2023": "50243",
    "2024": "54214",
    "2025": "57546",
    "2026": "60213",
    "2027": "62200",
    "2028": "63500",
    "2029": "63769",
    "2030": "63525",
    "2031": "62955",
    "2032": "62365",
    "2033": "61502",
    "2034": "60573",
    "2035": "60809",
    "2036": "62491",
    "2037": "64676",
    "2038": "66967",
    "2039": "70182",
    "2040": "73116",
    "2041": "75765",
    "2042": "77616",
    "2043": "80366",
    "2044": "83389",
    "2045": "86750",
    "2046": "90248",
    "2047": "95209",
    "2048": "99425",
    "2049": "104932",
    "2050": "110894",
    "Age": "65-69"
  },
  {
    "2021": "24059",
    "2022": "25862",
    "2023": "27520",
    "2024": "29665",
    "2025": "31753",
    "2026": "35142",
    "2027": "38125",
    "2028": "41874",
    "2029": "45273",
    "2030": "48152",
    "2031": "50502",
    "2032": "52282",
    "2033": "53512",
    "2034": "53875",
    "2035": "53809",
    "2036": "53481",
    "2037": "53128",
    "2038": "52552",
    "2039": "51895",
    "2040": "52249",
    "2041": "53873",
    "2042": "55922",
    "2043": "58047",
    "2044": "60955",
    "2045": "63630",
    "2046": "66101",
    "2047": "67857",
    "2048": "70410",
    "2049": "73209",
    "2050": "76312",
    "Age": "70-74"
  },
  {
    "2021": "11283",
    "2022": "12022",
    "2023": "13248",
    "2024": "14818",
    "2025": "16908",
    "2026": "17962",
    "2027": "19386",
    "2028": "20684",
    "2029": "22390",
    "2030": "24105",
    "2031": "26797",
    "2032": "29197",
    "2033": "32187",
    "2034": "34930",
    "2035": "37286",
    "2036": "39264",
    "2037": "40787",
    "2038": "41916",
    "2039": "42358",
    "2040": "42464",
    "2041": "42377",
    "2042": "42265",
    "2043": "41986",
    "2044": "41610",
    "2045": "42070",
    "2046": "43592",
    "2047": "45443",
    "2048": "47332",
    "2049": "49832",
    "2050": "52156",
    "Age": "75-79"
  },
  {
    "2021": "6343",
    "2022": "6928",
    "2023": "6969",
    "2024": "6924",
    "2025": "6976",
    "2026": "7105",
    "2027": "7679",
    "2028": "8517",
    "2029": "9567",
    "2030": "10983",
    "2031": "11719",
    "2032": "12744",
    "2033": "13674",
    "2034": "14913",
    "2035": "16208",
    "2036": "18153",
    "2037": "19918",
    "2038": "22093",
    "2039": "24119",
    "2040": "25889",
    "2041": "27424",
    "2042": "28634",
    "2043": "29597",
    "2044": "30070",
    "2045": "30305",
    "2046": "30419",
    "2047": "30506",
    "2048": "30483",
    "2049": "30361",
    "2050": "30869",
    "Age": "80-84"
  },
  {
    "2021": "2537",
    "2022": "2729",
    "2023": "2955",
    "2024": "3158",
    "2025": "3395",
    "2026": "4029",
    "2027": "4420",
    "2028": "4534",
    "2029": "4598",
    "2030": "4749",
    "2031": "5179",
    "2032": "5727",
    "2033": "6268",
    "2034": "6906",
    "2035": "7814",
    "2036": "8478",
    "2037": "9392",
    "2038": "10242",
    "2039": "11344",
    "2040": "12647",
    "2041": "14201",
    "2042": "15796",
    "2043": "17608",
    "2044": "19483",
    "2045": "21322",
    "2046": "23175",
    "2047": "24846",
    "2048": "26511",
    "2049": "27901",
    "2050": "29121",
    "Age": "85+"
  }
]
# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_region, gender='erkak').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='erkak',
                    population=population
                )

print("Navoi male data import completed successfully!")
