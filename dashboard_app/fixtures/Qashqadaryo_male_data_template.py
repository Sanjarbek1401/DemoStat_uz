import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_region, _ = Region.objects.get_or_create(name='Qashqadaryo', defaults={'svg_id': 'kashkadarya'})

# Data to be imported
navoi_male_data =[
  {
    "2021": "1725363",
    "2022": "1766812",
    "2023": "1808089",
    "2024": "1848666",
    "2025": "1888465",
    "2026": "1927279",
    "2027": "1964982",
    "2028": "2001676",
    "2029": "2037206",
    "2030": "2071550",
    "2031": "2104670",
    "2032": "2136600",
    "2033": "2167366",
    "2034": "2196855",
    "2035": "2225318",
    "2036": "2252781",
    "2037": "2279499",
    "2038": "2305576",
    "2039": "2331207",
    "2040": "2356651",
    "2041": "2382275",
    "2042": "2408335",
    "2043": "2434964",
    "2044": "2462239",
    "2045": "2490308",
    "2046": "2519111",
    "2047": "2548575",
    "2048": "2578612",
    "2049": "2609051",
    "2050": "2639693",
    "Age": "Total"
  },
  {
    "2021": "216779",
    "2022": "229454",
    "2023": "239323",
    "2024": "246251",
    "2025": "249980",
    "2026": "251050",
    "2027": "249199",
    "2028": "246388",
    "2029": "243007",
    "2030": "239138",
    "2031": "234968",
    "2032": "230671",
    "2033": "226182",
    "2034": "221543",
    "2035": "217037",
    "2036": "212749",
    "2037": "208904",
    "2038": "205595",
    "2039": "203128",
    "2040": "201521",
    "2041": "201083",
    "2042": "201832",
    "2043": "203784",
    "2044": "206834",
    "2045": "210848",
    "2046": "215437",
    "2047": "220261",
    "2048": "225108",
    "2049": "229733",
    "2050": "233812",
    "Age": "0-4"
  },
  {
    "2021": "188542",
    "2022": "190417",
    "2023": "194577",
    "2024": "199780",
    "2025": "206250",
    "2026": "214806",
    "2027": "227270",
    "2028": "236967",
    "2029": "243792",
    "2030": "247482",
    "2031": "248570",
    "2032": "246784",
    "2033": "244064",
    "2034": "240787",
    "2035": "237033",
    "2036": "232982",
    "2037": "228806",
    "2038": "224439",
    "2039": "219922",
    "2040": "215535",
    "2041": "211362",
    "2042": "207623",
    "2043": "204409",
    "2044": "202025",
    "2045": "200486",
    "2046": "200100",
    "2047": "200881",
    "2048": "202849",
    "2049": "205899",
    "2050": "209899",
    "Age": "5-9"
  },
  {
    "2021": "160701",
    "2022": "166236",
    "2023": "169850",
    "2024": "175077",
    "2025": "181457",
    "2026": "187217",
    "2027": "189037",
    "2028": "193141",
    "2029": "198273",
    "2030": "204653",
    "2031": "213093",
    "2032": "225420",
    "2033": "235008",
    "2034": "241773",
    "2035": "245451",
    "2036": "246567",
    "2037": "244844",
    "2038": "242203",
    "2039": "239013",
    "2040": "235352",
    "2041": "231396",
    "2042": "227318",
    "2043": "223050",
    "2044": "218633",
    "2045": "214343",
    "2046": "210262",
    "2047": "206609",
    "2048": "203472",
    "2049": "201154",
    "2050": "199668",
    "Age": "10-14"
  },
  {
    "2021": "133926",
    "2022": "136627",
    "2023": "141743",
    "2024": "147367",
    "2025": "153385",
    "2026": "159553",
    "2027": "165005",
    "2028": "168561",
    "2029": "173727",
    "2030": "180036",
    "2031": "185742",
    "2032": "187537",
    "2033": "191611",
    "2034": "196700",
    "2035": "203026",
    "2036": "211383",
    "2037": "223597",
    "2038": "233090",
    "2039": "239800",
    "2040": "243463",
    "2041": "244604",
    "2042": "242938",
    "2043": "240372",
    "2044": "237266",
    "2045": "233692",
    "2046": "229828",
    "2047": "225841",
    "2048": "221665",
    "2049": "217337",
    "2050": "213134",
    "Age": "15-19"
  },
  {
    "2021": "141908",
    "2022": "138383",
    "2023": "137430",
    "2024": "134874",
    "2025": "132898",
    "2026": "132994",
    "2027": "135653",
    "2028": "140690",
    "2029": "146214",
    "2030": "152117",
    "2031": "158170",
    "2032": "163535",
    "2033": "167037",
    "2034": "172137",
    "2035": "178360",
    "2036": "183997",
    "2037": "185763",
    "2038": "189804",
    "2039": "194843",
    "2040": "201102",
    "2041": "209347",
    "2042": "221402",
    "2043": "230760",
    "2044": "237392",
    "2045": "241037",
    "2046": "242215",
    "2047": "240634",
    "2048": "238177",
    "2049": "235188",
    "2050": "231736",
    "Age": "20-24"
  },
  {
    "2021": "164415",
    "2022": "161490",
    "2023": "156687",
    "2024": "154318",
    "2025": "148635",
    "2026": "140651",
    "2027": "137264",
    "2028": "136393",
    "2029": "133935",
    "2030": "132045",
    "2031": "132175",
    "2032": "134801",
    "2033": "139747",
    "2034": "145148",
    "2035": "150917",
    "2036": "156839",
    "2037": "162107",
    "2038": "165543",
    "2039": "170559",
    "2040": "176676",
    "2041": "182231",
    "2042": "183971",
    "2043": "187979",
    "2044": "192960",
    "2045": "199132",
    "2046": "207233",
    "2047": "219089",
    "2048": "228285",
    "2049": "234827",
    "2050": "238456",
    "Age": "25-29"
  },
  {
    "2021": "157367",
    "2022": "159163",
    "2023": "160222",
    "2024": "159950",
    "2025": "161864",
    "2026": "161957",
    "2027": "159122",
    "2028": "154468",
    "2029": "152251",
    "2030": "146795",
    "2031": "139082",
    "2032": "135872",
    "2033": "135105",
    "2034": "132763",
    "2035": "130977",
    "2036": "131149",
    "2037": "133742",
    "2038": "138595",
    "2039": "143880",
    "2040": "149524",
    "2041": "155324",
    "2042": "160501",
    "2043": "163878",
    "2044": "168817",
    "2045": "174836",
    "2046": "180324",
    "2047": "182052",
    "2048": "186031",
    "2049": "190951",
    "2050": "197028",
    "Age": "30-34"
  },
  {
    "2021": "130523",
    "2022": "137620",
    "2023": "144022",
    "2024": "148608",
    "2025": "151101",
    "2026": "154366",
    "2027": "156085",
    "2028": "157123",
    "2029": "156861",
    "2030": "158773",
    "2031": "158917",
    "2032": "156224",
    "2033": "151757",
    "2034": "149714",
    "2035": "144502",
    "2036": "137065",
    "2037": "134032",
    "2038": "133371",
    "2039": "131147",
    "2040": "129463",
    "2041": "129680",
    "2042": "132246",
    "2043": "137016",
    "2044": "142194",
    "2045": "147728",
    "2046": "153423",
    "2047": "158521",
    "2048": "161848",
    "2049": "166716",
    "2050": "172640",
    "Age": "35-39"
  },
  {
    "2021": "99701",
    "2022": "103919",
    "2023": "108759",
    "2024": "113231",
    "2025": "120332",
    "2026": "127918",
    "2027": "134776",
    "2028": "140985",
    "2029": "145446",
    "2030": "147875",
    "2031": "151086",
    "2032": "152790",
    "2033": "153852",
    "2034": "153636",
    "2035": "155568",
    "2036": "155776",
    "2037": "153225",
    "2038": "148941",
    "2039": "147054",
    "2040": "142053",
    "2041": "134857",
    "2042": "131977",
    "2043": "131409",
    "2044": "129291",
    "2045": "127701",
    "2046": "127959",
    "2047": "130504",
    "2048": "135202",
    "2049": "140293",
    "2050": "145736",
    "Age": "40-44"
  },
  {
    "2021": "82759",
    "2022": "84693",
    "2023": "87054",
    "2024": "91037",
    "2025": "94625",
    "2026": "97575",
    "2027": "101667",
    "2028": "106370",
    "2029": "110709",
    "2030": "117620",
    "2031": "125004",
    "2032": "131683",
    "2033": "137743",
    "2034": "142114",
    "2035": "144510",
    "2036": "147695",
    "2037": "149405",
    "2038": "150500",
    "2039": "150333",
    "2040": "152285",
    "2041": "152560",
    "2042": "150139",
    "2043": "146017",
    "2044": "144261",
    "2045": "139455",
    "2046": "132491",
    "2047": "129750",
    "2048": "129262",
    "2049": "127243",
    "2050": "125737",
    "Age": "45-49"
  },
  {
    "2021": "64823",
    "2022": "67687",
    "2023": "70234",
    "2024": "74193",
    "2025": "77380",
    "2026": "80390",
    "2027": "82268",
    "2028": "84559",
    "2029": "88431",
    "2030": "91917",
    "2031": "94793",
    "2032": "98779",
    "2033": "103356",
    "2034": "107582",
    "2035": "114311",
    "2036": "121500",
    "2037": "128006",
    "2038": "133918",
    "2039": "138198",
    "2040": "140566",
    "2041": "143731",
    "2042": "145451",
    "2043": "146583",
    "2044": "146472",
    "2045": "148445",
    "2046": "148797",
    "2047": "146511",
    "2048": "142557",
    "2049": "140924",
    "2050": "136317",
    "Age": "50-54"
  },
  {
    "2021": "61769",
    "2022": "61582",
    "2023": "61331",
    "2024": "60565",
    "2025": "60293",
    "2026": "62113",
    "2027": "64881",
    "2028": "67332",
    "2029": "71120",
    "2030": "74171",
    "2031": "77089",
    "2032": "78926",
    "2033": "81152",
    "2034": "84907",
    "2035": "88283",
    "2036": "91091",
    "2037": "94960",
    "2038": "99392",
    "2039": "103497",
    "2040": "110012",
    "2041": "116973",
    "2042": "123271",
    "2043": "129003",
    "2044": "133171",
    "2045": "135514",
    "2046": "138657",
    "2047": "140393",
    "2048": "141564",
    "2049": "141516",
    "2050": "143504",
    "Age": "55-59"
  },
  {
    "2021": "53820",
    "2022": "56033",
    "2023": "57387",
    "2024": "57624",
    "2025": "57742",
    "2026": "57370",
    "2027": "57249",
    "2028": "57078",
    "2029": "56409",
    "2030": "56222",
    "2031": "58000",
    "2032": "60655",
    "2033": "62997",
    "2034": "66568",
    "2035": "69452",
    "2036": "72259",
    "2037": "74052",
    "2038": "76201",
    "2039": "79802",
    "2040": "83031",
    "2041": "85751",
    "2042": "89464",
    "2043": "93702",
    "2044": "97652",
    "2045": "103886",
    "2046": "110542",
    "2047": "116562",
    "2048": "122044",
    "2049": "126051",
    "2050": "128349",
    "Age": "60-64"
  },
  {
    "2021": "33449",
    "2022": "35754",
    "2023": "39051",
    "2024": "42054",
    "2025": "45084",
    "2026": "47807",
    "2027": "49802",
    "2028": "51061",
    "2029": "51330",
    "2030": "51525",
    "2031": "51289",
    "2032": "51272",
    "2033": "51221",
    "2034": "50696",
    "2035": "50629",
    "2036": "52352",
    "2037": "54864",
    "2038": "57072",
    "2039": "60378",
    "2040": "63062",
    "2041": "65724",
    "2042": "68740",
    "2043": "69511",
    "2044": "72912",
    "2045": "75961",
    "2046": "78564",
    "2047": "82075",
    "2048": "86066",
    "2049": "89809",
    "2050": "95665",
    "Age": "65-69"
  },
  {
    "2021": "17778",
    "2022": "19855",
    "2023": "21596",
    "2024": "23833",
    "2025": "25810",
    "2026": "28209",
    "2027": "30205",
    "2028": "33047",
    "2029": "35657",
    "2030": "38307",
    "2031": "40707",
    "2032": "42477",
    "2033": "43643",
    "2034": "43963",
    "2035": "44252",
    "2036": "44172",
    "2037": "44272",
    "2038": "44348",
    "2039": "43980",
    "2040": "44036",
    "2041": "46754",
    "2042": "48012",
    "2043": "50059",
    "2044": "53046",
    "2045": "55488",
    "2046": "57965",
    "2047": "59621",
    "2048": "64544",
    "2049": "64689",
    "2050": "67499",
    "Age": "70-74"
  },
  {
    "2021": "8354",
    "2022": "8676",
    "2023": "9662",
    "2024": "10682",
    "2025": "12407",
    "2026": "13660",
    "2027": "15311",
    "2028": "16683",
    "2029": "18462",
    "2030": "20076",
    "2031": "22019",
    "2032": "23667",
    "2033": "25987",
    "2034": "28147",
    "2035": "30359",
    "2036": "32379",
    "2037": "33878",
    "2038": "34922",
    "2039": "35283",
    "2040": "35655",
    "2041": "35733",
    "2042": "35943",
    "2043": "36144",
    "2044": "35937",
    "2045": "36121",
    "2046": "37645",
    "2047": "39736",
    "2048": "41566",
    "2049": "44136",
    "2050": "46253",
    "Age": "75-79"
  },
  {
    "2021": "5540",
    "2022": "5921",
    "2023": "5733",
    "2024": "5642",
    "2025": "5348",
    "2026": "5495",
    "2027": "5784",
    "2028": "6477",
    "2029": "7196",
    "2030": "8404",
    "2031": "9303",
    "2032": "10498",
    "2033": "11489",
    "2034": "12786",
    "2035": "14002",
    "2036": "15453",
    "2037": "16714",
    "2038": "18459",
    "2039": "20111",
    "2040": "21817",
    "2041": "23395",
    "2042": "24577",
    "2043": "25455",
    "2044": "25831",
    "2045": "26252",
    "2046": "26457",
    "2047": "26746",
    "2048": "27037",
    "2049": "26978",
    "2050": "27254",
    "Age": "80-84"
  },
  {
    "2021": "3209",
    "2022": "3302",
    "2023": "3429",
    "2024": "3581",
    "2025": "3875",
    "2026": "4148",
    "2027": "4404",
    "2028": "4352",
    "2029": "4387",
    "2030": "4394",
    "2031": "4663",
    "2032": "5009",
    "2033": "5414",
    "2034": "5889",
    "2035": "6650",
    "2036": "7373",
    "2037": "8329",
    "2038": "9184",
    "2039": "10278",
    "2040": "11498",
    "2041": "12843",
    "2042": "14212",
    "2043": "15833",
    "2044": "17547",
    "2045": "19382",
    "2046": "21212",
    "2047": "22788",
    "2048": "24336",
    "2049": "25607",
    "2050": "27004",
    "Age": "85+"
  }
]
# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_region, gender='erkak').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='erkak',
                    population=population
                )

print("Navoi male data import completed successfully!")
