import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_city_region, _ = Region.objects.get_or_create(name='Qoraqalpog\'iston', defaults={'svg_id': 'karakalpakstan'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "1948488",
    "2022": "1978228",
    "2023": "2007655",
    "2024": "2036363",
    "2025": "2064307",
    "2026": "2091305",
    "2027": "2117225",
    "2028": "2142150",
    "2029": "2165965",
    "2030": "2188637",
    "2031": "2210113",
    "2032": "2230397",
    "2033": "2249480",
    "2034": "2267222",
    "2035": "2283782",
    "2036": "2299131",
    "2037": "2313427",
    "2038": "2326706",
    "2039": "2339052",
    "2040": "2350613",
    "2041": "2361618",
    "2042": "2372235",
    "2043": "2382565",
    "2044": "2392694",
    "2045": "2402780",
    "2046": "2412841",
    "2047": "2422879",
    "2048": "2432899",
    "2049": "2442842",
    "2050": "2452622",
    "Age": "Total"
  },
  {
    "2021": "190491",
    "2022": "199262",
    "2023": "205860",
    "2024": "210807",
    "2025": "216174",
    "2026": "220940",
    "2027": "219574",
    "2028": "217322",
    "2029": "214500",
    "2030": "211154",
    "2031": "207437",
    "2032": "203518",
    "2033": "199306",
    "2034": "194796",
    "2035": "190196",
    "2036": "185555",
    "2037": "181044",
    "2038": "176726",
    "2039": "172833",
    "2040": "169350",
    "2041": "166516",
    "2042": "164346",
    "2043": "162899",
    "2044": "162177",
    "2045": "162185",
    "2046": "162726",
    "2047": "163629",
    "2048": "164799",
    "2049": "166096",
    "2050": "167296",
    "Age": "0-4"
  },
  {
    "2021": "194068",
    "2022": "190620",
    "2023": "190404",
    "2024": "189922",
    "2025": "187953",
    "2026": "188204",
    "2027": "196749",
    "2028": "203127",
    "2029": "207914",
    "2030": "213150",
    "2031": "217852",
    "2032": "216538",
    "2033": "214403",
    "2034": "211719",
    "2035": "208525",
    "2036": "204971",
    "2037": "201217",
    "2038": "197175",
    "2039": "192838",
    "2040": "188411",
    "2041": "183942",
    "2042": "179599",
    "2043": "175444",
    "2044": "171701",
    "2045": "168356",
    "2046": "165642",
    "2047": "163569",
    "2048": "162197",
    "2049": "161527",
    "2050": "161563",
    "Age": "5-9"
  },
  {
    "2021": "182370",
    "2022": "185770",
    "2023": "186060",
    "2024": "186354",
    "2025": "189154",
    "2026": "191862",
    "2027": "188426",
    "2028": "188231",
    "2029": "187771",
    "2030": "185842",
    "2031": "186069",
    "2032": "194479",
    "2033": "200718",
    "2034": "205408",
    "2035": "210562",
    "2036": "215228",
    "2037": "213962",
    "2038": "211919",
    "2039": "209339",
    "2040": "206258",
    "2041": "202824",
    "2042": "199198",
    "2043": "195290",
    "2044": "191094",
    "2045": "186811",
    "2046": "182486",
    "2047": "178280",
    "2048": "174253",
    "2049": "170626",
    "2050": "167381",
    "Age": "10-14"
  },
  {
    "2021": "155269",
    "2022": "158709",
    "2023": "165910",
    "2024": "171684",
    "2025": "178201",
    "2026": "180016",
    "2027": "183312",
    "2028": "183562",
    "2029": "183857",
    "2030": "186637",
    "2031": "189328",
    "2032": "185942",
    "2033": "185800",
    "2034": "185395",
    "2035": "183548",
    "2036": "183791",
    "2037": "192091",
    "2038": "198208",
    "2039": "202814",
    "2040": "207880",
    "2041": "212470",
    "2042": "211225",
    "2043": "209267",
    "2044": "206788",
    "2045": "203821",
    "2046": "200509",
    "2047": "197007",
    "2048": "193226",
    "2049": "189158",
    "2050": "185001",
    "Age": "15-19"
  },
  {
    "2021": "156696",
    "2022": "154606",
    "2023": "153932",
    "2024": "154073",
    "2025": "150902",
    "2026": "152869",
    "2027": "156085",
    "2028": "162931",
    "2029": "168313",
    "2030": "174415",
    "2031": "175942",
    "2032": "179136",
    "2033": "179474",
    "2034": "179917",
    "2035": "182676",
    "2036": "185288",
    "2037": "181991",
    "2038": "181996",
    "2039": "181779",
    "2040": "180182",
    "2041": "180412",
    "2042": "188448",
    "2043": "194281",
    "2044": "198648",
    "2045": "203406",
    "2046": "207769",
    "2047": "206587",
    "2048": "204857",
    "2049": "202629",
    "2050": "199930",
    "Age": "20-24"
  },
  {
    "2021": "162842",
    "2022": "158142",
    "2023": "153209",
    "2024": "154060",
    "2025": "155586",
    "2026": "154252",
    "2027": "152378",
    "2028": "151884",
    "2029": "152212",
    "2030": "149258",
    "2031": "151222",
    "2032": "154143",
    "2033": "160508",
    "2034": "165400",
    "2035": "171169",
    "2036": "172577",
    "2037": "175727",
    "2038": "176094",
    "2039": "176549",
    "2040": "179198",
    "2041": "181819",
    "2042": "178770",
    "2043": "178988",
    "2044": "178939",
    "2045": "177516",
    "2046": "177756",
    "2047": "185402",
    "2048": "190797",
    "2049": "194833",
    "2050": "199288",
    "Age": "25-29"
  },
  {
    "2021": "183468",
    "2022": "182385",
    "2023": "178482",
    "2024": "173350",
    "2025": "167287",
    "2026": "159114",
    "2027": "154871",
    "2028": "150250",
    "2029": "151171",
    "2030": "152710",
    "2031": "151544",
    "2032": "149902",
    "2033": "149565",
    "2034": "150043",
    "2035": "147265",
    "2036": "149228",
    "2037": "151937",
    "2038": "157952",
    "2039": "162495",
    "2040": "168009",
    "2041": "169302",
    "2042": "172389",
    "2043": "172776",
    "2044": "173264",
    "2045": "175871",
    "2046": "178532",
    "2047": "175679",
    "2048": "176039",
    "2049": "176092",
    "2050": "174794",
    "Age": "30-34"
  },
  {
    "2021": "160468",
    "2022": "166942",
    "2023": "171634",
    "2024": "173068",
    "2025": "174174",
    "2026": "176883",
    "2027": "175814",
    "2028": "172208",
    "2029": "167532",
    "2030": "162037",
    "2031": "154452",
    "2032": "150668",
    "2033": "146362",
    "2034": "147377",
    "2035": "148946",
    "2036": "147915",
    "2037": "146449",
    "2038": "146221",
    "2039": "146802",
    "2040": "144150",
    "2041": "146098",
    "2042": "148641",
    "2043": "154385",
    "2044": "158664",
    "2045": "163989",
    "2046": "165217",
    "2047": "168274",
    "2048": "168686",
    "2049": "169190",
    "2050": "171729",
    "Age": "35-39"
  },
  {
    "2021": "128430",
    "2022": "132968",
    "2023": "138043",
    "2024": "142874",
    "2025": "148988",
    "2026": "155081",
    "2027": "161151",
    "2028": "165586",
    "2029": "166931",
    "2030": "167988",
    "2031": "170659",
    "2032": "169722",
    "2033": "166427",
    "2034": "162145",
    "2035": "157086",
    "2036": "149933",
    "2037": "146472",
    "2038": "142395",
    "2039": "143464",
    "2040": "145039",
    "2041": "144102",
    "2042": "142767",
    "2043": "142623",
    "2044": "143284",
    "2045": "140746",
    "2046": "142695",
    "2047": "145129",
    "2048": "150675",
    "2049": "154759",
    "2050": "159934",
    "Age": "40-44"
  },
  {
    "2021": "110259",
    "2022": "111301",
    "2023": "114264",
    "2024": "118556",
    "2025": "121839",
    "2026": "124486",
    "2027": "128789",
    "2028": "133619",
    "2029": "138212",
    "2030": "144063",
    "2031": "149897",
    "2032": "155735",
    "2033": "160035",
    "2034": "161362",
    "2035": "162429",
    "2036": "165097",
    "2037": "164277",
    "2038": "161213",
    "2039": "157208",
    "2040": "152465",
    "2041": "145654",
    "2042": "142452",
    "2043": "138574",
    "2044": "139695",
    "2045": "141287",
    "2046": "140439",
    "2047": "139218",
    "2048": "139138",
    "2049": "139860",
    "2050": "137415",
    "Age": "45-49"
  },
  {
    "2021": "90867",
    "2022": "95469",
    "2023": "98514",
    "2024": "101230",
    "2025": "104350",
    "2026": "106311",
    "2027": "107288",
    "2028": "110125",
    "2029": "114242",
    "2030": "117395",
    "2031": "119945",
    "2032": "124090",
    "2033": "128744",
    "2034": "133166",
    "2035": "138807",
    "2036": "144428",
    "2037": "150063",
    "2038": "154242",
    "2039": "155553",
    "2040": "156629",
    "2041": "159293",
    "2042": "158581",
    "2043": "155728",
    "2044": "151970",
    "2045": "147518",
    "2046": "141045",
    "2047": "138094",
    "2048": "134417",
    "2049": "135580",
    "2050": "137178",
    "Age": "50-54"
  },
  {
    "2021": "81317",
    "2022": "81058",
    "2023": "81650",
    "2024": "81905",
    "2025": "83174",
    "2026": "86467",
    "2027": "90816",
    "2028": "93685",
    "2029": "96254",
    "2030": "99226",
    "2031": "101135",
    "2032": "102111",
    "2033": "104856",
    "2034": "108809",
    "2035": "111846",
    "2036": "114317",
    "2037": "118299",
    "2038": "122770",
    "2039": "127013",
    "2040": "132419",
    "2041": "137800",
    "2042": "143204",
    "2043": "147245",
    "2044": "148541",
    "2045": "149642",
    "2046": "152313",
    "2047": "151730",
    "2048": "149106",
    "2049": "145599",
    "2050": "141450",
    "Age": "55-59"
  },
  {
    "2021": "65364",
    "2022": "68817",
    "2023": "71227",
    "2024": "73162",
    "2025": "74400",
    "2026": "74821",
    "2027": "74614",
    "2028": "75213",
    "2029": "75501",
    "2030": "76717",
    "2031": "79843",
    "2032": "83916",
    "2033": "86608",
    "2034": "89030",
    "2035": "91841",
    "2036": "93711",
    "2037": "94706",
    "2038": "97344",
    "2039": "101089",
    "2040": "103980",
    "2041": "106356",
    "2042": "110131",
    "2043": "114378",
    "2044": "118410",
    "2045": "123533",
    "2046": "128628",
    "2047": "133748",
    "2048": "137615",
    "2049": "138884",
    "2050": "140005",
    "Age": "60-64"
  },
  {
    "2021": "38872",
    "2022": "41801",
    "2023": "45435",
    "2024": "49273",
    "2025": "53167",
    "2026": "57183",
    "2027": "60224",
    "2028": "62370",
    "2029": "64140",
    "2030": "65302",
    "2031": "65801",
    "2032": "65722",
    "2033": "66374",
    "2034": "66743",
    "2035": "67932",
    "2036": "70870",
    "2037": "74619",
    "2038": "77112",
    "2039": "79362",
    "2040": "81975",
    "2041": "83795",
    "2042": "84815",
    "2043": "87318",
    "2044": "90814",
    "2045": "93537",
    "2046": "95809",
    "2047": "99338",
    "2048": "103311",
    "2049": "107083",
    "2050": "111843",
    "Age": "65-69"
  },
  {
    "2021": "25490",
    "2022": "26538",
    "2023": "27714",
    "2024": "29300",
    "2025": "29621",
    "2026": "31935",
    "2027": "34403",
    "2028": "37472",
    "2029": "40715",
    "2030": "43994",
    "2031": "47429",
    "2032": "50055",
    "2033": "51950",
    "2034": "53565",
    "2035": "54663",
    "2036": "55257",
    "2037": "55331",
    "2038": "56035",
    "2039": "56491",
    "2040": "57634",
    "2041": "60333",
    "2042": "63689",
    "2043": "65948",
    "2044": "67997",
    "2045": "70372",
    "2046": "72123",
    "2047": "73164",
    "2048": "75494",
    "2049": "78676",
    "2050": "81176",
    "Age": "70-74"
  },
  {
    "2021": "12619",
    "2022": "13305",
    "2023": "14595",
    "2024": "16062",
    "2025": "18044",
    "2026": "18814",
    "2027": "19651",
    "2028": "20569",
    "2029": "21822",
    "2030": "22178",
    "2031": "24029",
    "2032": "26011",
    "2033": "28468",
    "2034": "31069",
    "2035": "33676",
    "2036": "36468",
    "2037": "38628",
    "2038": "40230",
    "2039": "41645",
    "2040": "42637",
    "2041": "43298",
    "2042": "43507",
    "2043": "44234",
    "2044": "44763",
    "2045": "45835",
    "2046": "48232",
    "2047": "51106",
    "2048": "53070",
    "2049": "54847",
    "2050": "56899",
    "Age": "75-79"
  },
  {
    "2021": "6997",
    "2022": "7749",
    "2023": "7707",
    "2024": "7391",
    "2025": "7611",
    "2026": "7833",
    "2027": "8380",
    "2028": "9239",
    "2029": "10169",
    "2030": "11538",
    "2031": "12076",
    "2032": "12697",
    "2033": "13363",
    "2034": "14273",
    "2035": "14639",
    "2036": "15992",
    "2037": "17447",
    "2038": "19241",
    "2039": "21141",
    "2040": "23024",
    "2041": "25093",
    "2042": "26716",
    "2043": "27965",
    "2044": "29115",
    "2045": "29925",
    "2046": "30615",
    "2047": "30915",
    "2048": "31604",
    "2049": "32148",
    "2050": "33077",
    "Age": "80-84"
  },
  {
    "2021": "2601",
    "2022": "2786",
    "2023": "3016",
    "2024": "3292",
    "2025": "3681",
    "2026": "4237",
    "2027": "4699",
    "2028": "4758",
    "2029": "4708",
    "2030": "5033",
    "2031": "5454",
    "2032": "6010",
    "2033": "6518",
    "2034": "7004",
    "2035": "7975",
    "2036": "8504",
    "2037": "9168",
    "2038": "9833",
    "2039": "10638",
    "2040": "11404",
    "2041": "12511",
    "2042": "13758",
    "2043": "15220",
    "2044": "16832",
    "2045": "18403",
    "2046": "20308",
    "2047": "22010",
    "2048": "23613",
    "2049": "25254",
    "2050": "26663",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_city_region, gender='jami').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_city_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='jami',
                    population=population
                )

print("Navoi female data import completed successfully!")
