import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_city_region, _ = Region.objects.get_or_create(name='Andijon', defaults={'svg_id': 'andijan'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "1605959",
    "2022": "1638570",
    "2023": "1670843",
    "2024": "1702495",
    "2025": "1733580",
    "2026": "1764089",
    "2027": "1794096",
    "2028": "1823730",
    "2029": "1852733",
    "2030": "1880891",
    "2031": "1908046",
    "2032": "1934211",
    "2033": "1959434",
    "2034": "1983603",
    "2035": "2006887",
    "2036": "2029268",
    "2037": "2050928",
    "2038": "2071961",
    "2039": "2092549",
    "2040": "2112918",
    "2041": "2133354",
    "2042": "2154057",
    "2043": "2175108",
    "2044": "2196545",
    "2045": "2218464",
    "2046": "2240830",
    "2047": "2263595",
    "2048": "2286702",
    "2049": "2310038",
    "2050": "2333493",
    "Age": "Total"
  },
  {
    "2021": "177995",
    "2022": "187872",
    "2023": "197917",
    "2024": "202262",
    "2025": "203604",
    "2026": "203953",
    "2027": "202695",
    "2028": "201389",
    "2029": "200073",
    "2030": "198481",
    "2031": "196467",
    "2032": "193977",
    "2033": "190925",
    "2034": "187457",
    "2035": "183962",
    "2036": "180583",
    "2037": "177492",
    "2038": "174743",
    "2039": "172622",
    "2040": "171181",
    "2041": "170715",
    "2042": "171234",
    "2043": "172711",
    "2044": "175008",
    "2045": "177994",
    "2046": "181351",
    "2047": "184827",
    "2048": "188300",
    "2049": "191621",
    "2050": "194571",
    "Age": "0-4"
  },
  {
    "2021": "155086",
    "2022": "157977",
    "2023": "158726",
    "2024": "163081",
    "2025": "169457",
    "2026": "176946",
    "2027": "186710",
    "2028": "196664",
    "2029": "200976",
    "2030": "202328",
    "2031": "202711",
    "2032": "201501",
    "2033": "200246",
    "2034": "198980",
    "2035": "197441",
    "2036": "195484",
    "2037": "193055",
    "2038": "190068",
    "2039": "186670",
    "2040": "183246",
    "2041": "179937",
    "2042": "176913",
    "2043": "174227",
    "2044": "172162",
    "2045": "170768",
    "2046": "170336",
    "2047": "170877",
    "2048": "172363",
    "2049": "174660",
    "2050": "177639",
    "Age": "5-9"
  },
  {
    "2021": "142818",
    "2022": "144538",
    "2023": "144403",
    "2024": "146128",
    "2025": "149574",
    "2026": "154434",
    "2027": "157303",
    "2028": "158044",
    "2029": "162370",
    "2030": "168697",
    "2031": "176128",
    "2032": "185824",
    "2033": "195722",
    "2034": "200015",
    "2035": "201379",
    "2036": "201788",
    "2037": "200613",
    "2038": "199395",
    "2039": "198168",
    "2040": "196671",
    "2041": "194761",
    "2042": "192385",
    "2043": "189455",
    "2044": "186117",
    "2045": "182751",
    "2046": "179496",
    "2047": "176520",
    "2048": "173877",
    "2049": "171847",
    "2050": "170479",
    "Age": "10-14"
  },
  {
    "2021": "110654",
    "2022": "115064",
    "2023": "124374",
    "2024": "132003",
    "2025": "138298",
    "2026": "142084",
    "2027": "143770",
    "2028": "143639",
    "2029": "145376",
    "2030": "148820",
    "2031": "153660",
    "2032": "156511",
    "2033": "157245",
    "2034": "161556",
    "2035": "167857",
    "2036": "175249",
    "2037": "184882",
    "2038": "194705",
    "2039": "198963",
    "2040": "200333",
    "2041": "200767",
    "2042": "199632",
    "2043": "198463",
    "2044": "197284",
    "2045": "195835",
    "2046": "193973",
    "2047": "191645",
    "2048": "188764",
    "2049": "185476",
    "2050": "182157",
    "Age": "15-19"
  },
  {
    "2021": "113044",
    "2022": "110354",
    "2023": "107223",
    "2024": "106758",
    "2025": "108645",
    "2026": "110731",
    "2027": "115025",
    "2028": "124095",
    "2029": "131436",
    "2030": "137442",
    "2031": "141004",
    "2032": "142642",
    "2033": "142622",
    "2034": "144462",
    "2035": "147883",
    "2036": "152595",
    "2037": "155338",
    "2038": "156054",
    "2039": "160370",
    "2040": "166629",
    "2041": "173877",
    "2042": "183238",
    "2043": "192777",
    "2044": "196916",
    "2045": "198317",
    "2046": "198849",
    "2047": "197858",
    "2048": "196842",
    "2049": "195803",
    "2050": "194484",
    "Age": "20-24"
  },
  {
    "2021": "142988",
    "2022": "137883",
    "2023": "132781",
    "2024": "127954",
    "2025": "119008",
    "2026": "113559",
    "2027": "111159",
    "2028": "108258",
    "2029": "107911",
    "2030": "109806",
    "2031": "111828",
    "2032": "115892",
    "2033": "124562",
    "2034": "131529",
    "2035": "137307",
    "2036": "140801",
    "2037": "142484",
    "2038": "142521",
    "2039": "144342",
    "2040": "147672",
    "2041": "152300",
    "2042": "155066",
    "2043": "155846",
    "2044": "160100",
    "2045": "166164",
    "2046": "173151",
    "2047": "182206",
    "2048": "191498",
    "2049": "195558",
    "2050": "197005",
    "Age": "25-29"
  },
  {
    "2021": "136186",
    "2022": "138731",
    "2023": "141494",
    "2024": "142970",
    "2025": "144600",
    "2026": "141440",
    "2027": "136597",
    "2028": "131794",
    "2029": "127312",
    "2030": "118775",
    "2031": "113648",
    "2032": "111460",
    "2033": "108722",
    "2034": "108453",
    "2035": "110347",
    "2036": "112320",
    "2037": "116235",
    "2038": "124657",
    "2039": "131407",
    "2040": "137058",
    "2041": "140518",
    "2042": "142236",
    "2043": "142334",
    "2044": "144179",
    "2045": "147485",
    "2046": "152076",
    "2047": "154849",
    "2048": "155641",
    "2049": "159819",
    "2050": "165734",
    "Age": "30-34"
  },
  {
    "2021": "121505",
    "2022": "125568",
    "2023": "128162",
    "2024": "129576",
    "2025": "131405",
    "2026": "134231",
    "2027": "136690",
    "2028": "139404",
    "2029": "140874",
    "2030": "142558",
    "2031": "139571",
    "2032": "134975",
    "2033": "130422",
    "2034": "126208",
    "2035": "117978",
    "2036": "113086",
    "2037": "111048",
    "2038": "108427",
    "2039": "108216",
    "2040": "110113",
    "2041": "112063",
    "2042": "115890",
    "2043": "124149",
    "2044": "130757",
    "2045": "136327",
    "2046": "139766",
    "2047": "141509",
    "2048": "141644",
    "2049": "143486",
    "2050": "146745",
    "Age": "35-39"
  },
  {
    "2021": "99315",
    "2022": "102525",
    "2023": "105784",
    "2024": "109473",
    "2025": "114783",
    "2026": "119705",
    "2027": "123667",
    "2028": "126215",
    "2029": "127620",
    "2030": "129433",
    "2031": "132231",
    "2032": "134668",
    "2033": "137374",
    "2034": "138857",
    "2035": "140580",
    "2036": "137717",
    "2037": "133293",
    "2038": "128915",
    "2039": "124884",
    "2040": "116877",
    "2041": "112154",
    "2042": "110227",
    "2043": "107700",
    "2044": "107541",
    "2045": "109448",
    "2046": "111386",
    "2047": "115150",
    "2048": "123282",
    "2049": "129780",
    "2050": "135275",
    "Age": "40-44"
  },
  {
    "2021": "95158",
    "2022": "94480",
    "2023": "94539",
    "2024": "95741",
    "2025": "96508",
    "2026": "97759",
    "2027": "100908",
    "2028": "104103",
    "2029": "107720",
    "2030": "112936",
    "2031": "117775",
    "2032": "121683",
    "2033": "124212",
    "2034": "125620",
    "2035": "127432",
    "2036": "130214",
    "2037": "132638",
    "2038": "135332",
    "2039": "136820",
    "2040": "138571",
    "2041": "135813",
    "2042": "131533",
    "2043": "127300",
    "2044": "123415",
    "2045": "115600",
    "2046": "111015",
    "2047": "109175",
    "2048": "106722",
    "2049": "106596",
    "2050": "108498",
    "Age": "45-49"
  },
  {
    "2021": "84615",
    "2022": "88013",
    "2023": "89792",
    "2024": "92093",
    "2025": "92595",
    "2026": "93139",
    "2027": "92496",
    "2028": "92579",
    "2029": "93783",
    "2030": "94560",
    "2031": "95813",
    "2032": "98921",
    "2033": "102069",
    "2034": "105630",
    "2035": "110757",
    "2036": "115517",
    "2037": "119371",
    "2038": "121876",
    "2039": "123287",
    "2040": "125102",
    "2041": "127875",
    "2042": "130295",
    "2043": "132982",
    "2044": "134477",
    "2045": "136253",
    "2046": "133599",
    "2047": "129451",
    "2048": "125349",
    "2049": "121590",
    "2050": "113957",
    "Age": "50-54"
  },
  {
    "2021": "77002",
    "2022": "76775",
    "2023": "78256",
    "2024": "78232",
    "2025": "79766",
    "2026": "81893",
    "2027": "85193",
    "2028": "86932",
    "2029": "89173",
    "2030": "89692",
    "2031": "90273",
    "2032": "89699",
    "2033": "89832",
    "2034": "91049",
    "2035": "91847",
    "2036": "93114",
    "2037": "96174",
    "2038": "99267",
    "2039": "102762",
    "2040": "107780",
    "2041": "112445",
    "2042": "116234",
    "2043": "118709",
    "2044": "120124",
    "2045": "121950",
    "2046": "124717",
    "2047": "127130",
    "2048": "129791",
    "2049": "131274",
    "2050": "133059",
    "Age": "55-59"
  },
  {
    "2021": "62824",
    "2022": "66427",
    "2023": "67826",
    "2024": "69882",
    "2025": "71469",
    "2026": "72646",
    "2027": "72461",
    "2028": "73914",
    "2029": "73931",
    "2030": "75462",
    "2031": "77552",
    "2032": "80736",
    "2033": "82444",
    "2034": "84609",
    "2035": "85166",
    "2036": "85804",
    "2037": "85333",
    "2038": "85537",
    "2039": "86772",
    "2040": "87602",
    "2041": "88894",
    "2042": "91888",
    "2043": "94912",
    "2044": "98324",
    "2045": "103193",
    "2046": "107725",
    "2047": "111418",
    "2048": "113839",
    "2049": "115244",
    "2050": "117067",
    "Age": "60-64"
  },
  {
    "2021": "39517",
    "2022": "41744",
    "2023": "46079",
    "2024": "49740",
    "2025": "53601",
    "2026": "56746",
    "2027": "60042",
    "2028": "61365",
    "2029": "63294",
    "2030": "64824",
    "2031": "65994",
    "2032": "65909",
    "2033": "67346",
    "2034": "67449",
    "2035": "65988",
    "2036": "71034",
    "2037": "74060",
    "2038": "75730",
    "2039": "77796",
    "2040": "78410",
    "2041": "79127",
    "2042": "78803",
    "2043": "79110",
    "2044": "80371",
    "2045": "81248",
    "2046": "82571",
    "2047": "85464",
    "2048": "88379",
    "2049": "91657",
    "2050": "96294",
    "Age": "65-69"
  },
  {
    "2021": "23460",
    "2022": "26178",
    "2023": "28052",
    "2024": "29961",
    "2025": "31122",
    "2026": "33645",
    "2027": "35622",
    "2028": "38418",
    "2029": "42610",
    "2030": "46004",
    "2031": "48805",
    "2032": "51740",
    "2033": "52998",
    "2034": "54783",
    "2035": "56253",
    "2036": "57419",
    "2037": "57471",
    "2038": "58878",
    "2039": "59089",
    "2040": "60617",
    "2041": "62591",
    "2042": "65400",
    "2043": "67020",
    "2044": "68950",
    "2045": "69631",
    "2046": "70427",
    "2047": "70278",
    "2048": "70693",
    "2049": "71955",
    "2050": "72863",
    "Age": "70-74"
  },
  {
    "2021": "11460",
    "2022": "11406",
    "2023": "12573",
    "2024": "14050",
    "2025": "16485",
    "2026": "18088",
    "2027": "20235",
    "2028": "21706",
    "2029": "23219",
    "2030": "24240",
    "2031": "26335",
    "2032": "28013",
    "2033": "31150",
    "2034": "33776",
    "2035": "36597",
    "2036": "38972",
    "2037": "41452",
    "2038": "42614",
    "2039": "44199",
    "2040": "45563",
    "2041": "46686",
    "2042": "46875",
    "2043": "48206",
    "2044": "48525",
    "2045": "50004",
    "2046": "51848",
    "2047": "54342",
    "2048": "55853",
    "2049": "57563",
    "2050": "58279",
    "Age": "75-79"
  },
  {
    "2021": "8666",
    "2022": "9064",
    "2023": "8462",
    "2024": "7763",
    "2025": "7593",
    "2026": "7459",
    "2027": "7534",
    "2028": "8360",
    "2029": "9376",
    "2030": "11092",
    "2031": "12248",
    "2032": "13775",
    "2033": "14824",
    "2034": "15918",
    "2035": "16760",
    "2036": "18358",
    "2037": "19678",
    "2038": "22046",
    "2039": "24020",
    "2040": "26166",
    "2041": "28018",
    "2042": "29942",
    "2043": "30945",
    "2044": "32254",
    "2045": "33438",
    "2046": "34449",
    "2047": "34745",
    "2048": "35918",
    "2049": "36302",
    "2050": "37633",
    "Age": "80-84"
  },
  {
    "2021": "3666",
    "2022": "3972",
    "2023": "4398",
    "2024": "4828",
    "2025": "5087",
    "2026": "5630",
    "2027": "5989",
    "2028": "5851",
    "2029": "5681",
    "2030": "5741",
    "2031": "6002",
    "2032": "6282",
    "2033": "6721",
    "2034": "7253",
    "2035": "8353",
    "2036": "9213",
    "2037": "10311",
    "2038": "11195",
    "2039": "12162",
    "2040": "13325",
    "2041": "14815",
    "2042": "16267",
    "2043": "18264",
    "2044": "20042",
    "2045": "22060",
    "2046": "24095",
    "2047": "26151",
    "2048": "27948",
    "2049": "29807",
    "2050": "31753",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_city_region, gender='ayol').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_city_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='ayol',
                    population=population
                )

print("Navoi female data import completed successfully!")
