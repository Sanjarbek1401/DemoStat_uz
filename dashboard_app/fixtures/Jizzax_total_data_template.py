import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_city_region, _ = Region.objects.get_or_create(name='Jizzax', defaults={'svg_id': 'jizzakh'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "1443409",
    "2022": "1477162",
    "2023": "1510839",
    "2024": "1544109",
    "2025": "1576951",
    "2026": "1609199",
    "2027": "1640714",
    "2028": "1671544",
    "2029": "1701518",
    "2030": "1730516",
    "2031": "1758400",
    "2032": "1785129",
    "2033": "1810719",
    "2034": "1835103",
    "2035": "1858493",
    "2036": "1880943",
    "2037": "1902677",
    "2038": "1923833",
    "2039": "1944598",
    "2040": "1965234",
    "2041": "1986052",
    "2042": "2007278",
    "2043": "2029014",
    "2044": "2051320",
    "2045": "2074297",
    "2046": "2097914",
    "2047": "2122109",
    "2048": "2146819",
    "2049": "2171921",
    "2050": "2197263",
    "Age": "Total"
  },
  {
    "2021": "174631",
    "2022": "186111",
    "2023": "195162",
    "2024": "201262",
    "2025": "204673",
    "2026": "205411",
    "2027": "204710",
    "2028": "203295",
    "2029": "201354",
    "2030": "198801",
    "2031": "195678",
    "2032": "192083",
    "2033": "187984",
    "2034": "183496",
    "2035": "178963",
    "2036": "174585",
    "2037": "170642",
    "2038": "167256",
    "2039": "164695",
    "2040": "162998",
    "2041": "162425",
    "2042": "162967",
    "2043": "164595",
    "2044": "167176",
    "2045": "170558",
    "2046": "174398",
    "2047": "178419",
    "2048": "182464",
    "2049": "186353",
    "2050": "189843",
    "Age": "0-4"
  },
  {
    "2021": "143222",
    "2022": "146621",
    "2023": "151875",
    "2024": "157563",
    "2025": "163814",
    "2026": "172948",
    "2027": "184150",
    "2028": "192980",
    "2029": "198951",
    "2030": "202319",
    "2031": "203086",
    "2032": "202457",
    "2033": "201138",
    "2034": "199309",
    "2035": "196885",
    "2036": "193904",
    "2037": "190466",
    "2038": "186534",
    "2039": "182222",
    "2040": "177867",
    "2041": "173663",
    "2042": "169884",
    "2043": "166647",
    "2044": "164216",
    "2045": "162623",
    "2046": "162127",
    "2047": "162718",
    "2048": "164368",
    "2049": "166947",
    "2050": "170308",
    "Age": "5-9"
  },
  {
    "2021": "131364",
    "2022": "131842",
    "2023": "130939",
    "2024": "132766",
    "2025": "137322",
    "2026": "142316",
    "2027": "145633",
    "2028": "150793",
    "2029": "156369",
    "2030": "162484",
    "2031": "171439",
    "2032": "182445",
    "2033": "191122",
    "2034": "197008",
    "2035": "200353",
    "2036": "201150",
    "2037": "200585",
    "2038": "199349",
    "2039": "197616",
    "2040": "195303",
    "2041": "192447",
    "2042": "189144",
    "2043": "185358",
    "2044": "181196",
    "2045": "176990",
    "2046": "172926",
    "2047": "169274",
    "2048": "166148",
    "2049": "163807",
    "2050": "162285",
    "Age": "10-14"
  },
  {
    "2021": "114956",
    "2022": "117220",
    "2023": "122686",
    "2024": "126347",
    "2025": "128805",
    "2026": "130393",
    "2027": "130856",
    "2028": "129974",
    "2029": "131801",
    "2030": "136312",
    "2031": "141241",
    "2032": "144489",
    "2033": "149562",
    "2034": "152045",
    "2035": "161066",
    "2036": "169889",
    "2037": "180721",
    "2038": "189247",
    "2039": "195043",
    "2040": "198360",
    "2041": "199186",
    "2042": "198692",
    "2043": "197548",
    "2044": "195919",
    "2045": "193717",
    "2046": "190980",
    "2047": "187800",
    "2048": "184140",
    "2049": "180104",
    "2050": "176020",
    "Age": "15-19"
  },
  {
    "2021": "114973",
    "2022": "112925",
    "2023": "112625",
    "2024": "113340",
    "2025": "114335",
    "2026": "115191",
    "2027": "117394",
    "2028": "122679",
    "2029": "126154",
    "2030": "128464",
    "2031": "129954",
    "2032": "130465",
    "2033": "129752",
    "2034": "131675",
    "2035": "136094",
    "2036": "140808",
    "2037": "143830",
    "2038": "148706",
    "2039": "154048",
    "2040": "159912",
    "2041": "168411",
    "2042": "178775",
    "2043": "186893",
    "2044": "192450",
    "2045": "195701",
    "2046": "196619",
    "2047": "196318",
    "2048": "195405",
    "2049": "194020",
    "2050": "192073",
    "Age": "20-24"
  },
  {
    "2021": "197392",
    "2022": "133014",
    "2023": "128284",
    "2024": "124433",
    "2025": "119560",
    "2026": "116112",
    "2027": "114380",
    "2028": "114267",
    "2029": "115081",
    "2030": "116140",
    "2031": "117016",
    "2032": "119077",
    "2033": "124070",
    "2034": "127317",
    "2035": "129551",
    "2036": "131089",
    "2037": "131744",
    "2038": "131166",
    "2039": "133052",
    "2040": "137276",
    "2041": "141816",
    "2042": "144744",
    "2043": "149493",
    "2044": "154631",
    "2045": "160194",
    "2046": "168237",
    "2047": "178079",
    "2048": "185799",
    "2049": "191150",
    "2050": "194363",
    "Age": "25-29"
  },
  {
    "2021": "133136",
    "2022": "135987",
    "2023": "137638",
    "2024": "138185",
    "2025": "137863",
    "2026": "135572",
    "2027": "131597",
    "2028": "127328",
    "2029": "123922",
    "2030": "119481",
    "2031": "116386",
    "2032": "114881",
    "2033": "114882",
    "2034": "115740",
    "2035": "116824",
    "2036": "117707",
    "2037": "119676",
    "2038": "124486",
    "2039": "127610",
    "2040": "129828",
    "2041": "131422",
    "2042": "132200",
    "2043": "131756",
    "2044": "133668",
    "2045": "137810",
    "2046": "142263",
    "2047": "145129",
    "2048": "149761",
    "2049": "154721",
    "2050": "160044",
    "Age": "30-34"
  },
  {
    "2021": "106794",
    "2022": "116144",
    "2023": "119332",
    "2024": "121934",
    "2025": "127451",
    "2026": "130235",
    "2027": "132952",
    "2028": "134567",
    "2029": "135140",
    "2030": "134985",
    "2031": "132943",
    "2032": "129315",
    "2033": "125414",
    "2034": "122355",
    "2035": "118250",
    "2036": "115424",
    "2037": "114095",
    "2038": "114190",
    "2039": "115097",
    "2040": "116220",
    "2041": "117138",
    "2042": "119077",
    "2043": "123783",
    "2044": "126848",
    "2045": "129076",
    "2046": "130727",
    "2047": "131601",
    "2048": "131252",
    "2049": "133163",
    "2050": "137203",
    "Age": "35-39"
  },
  {
    "2021": "83398",
    "2022": "84355",
    "2023": "89513",
    "2024": "95041",
    "2025": "98264",
    "2026": "104655",
    "2027": "113628",
    "2028": "116636",
    "2029": "119119",
    "2030": "124465",
    "2031": "127135",
    "2032": "129794",
    "2033": "131413",
    "2034": "132045",
    "2035": "131995",
    "2036": "130135",
    "2037": "126764",
    "2038": "123139",
    "2039": "120337",
    "2040": "116484",
    "2041": "113863",
    "2042": "112679",
    "2043": "112864",
    "2044": "113828",
    "2045": "114994",
    "2046": "115948",
    "2047": "117867",
    "2048": "122489",
    "2049": "125496",
    "2050": "127712",
    "Age": "40-44"
  },
  {
    "2021": "68954",
    "2022": "70579",
    "2023": "73092",
    "2024": "76058",
    "2025": "79210",
    "2026": "81931",
    "2027": "82815",
    "2028": "87799",
    "2029": "93131",
    "2030": "96203",
    "2031": "102358",
    "2032": "111046",
    "2033": "113937",
    "2034": "116344",
    "2035": "121560",
    "2036": "124159",
    "2037": "126784",
    "2038": "128408",
    "2039": "129086",
    "2040": "129125",
    "2041": "127419",
    "2042": "124260",
    "2043": "120854",
    "2044": "118255",
    "2045": "114611",
    "2046": "112160",
    "2047": "111091",
    "2048": "111336",
    "2049": "112332",
    "2050": "113516",
    "Age": "45-49"
  },
  {
    "2021": "58234",
    "2022": "59712",
    "2023": "61229",
    "2024": "63725",
    "2025": "65891",
    "2026": "67371",
    "2027": "68944",
    "2028": "71374",
    "2029": "74237",
    "2030": "77289",
    "2031": "79941",
    "2032": "80782",
    "2033": "85614",
    "2034": "90778",
    "2035": "93732",
    "2036": "99686",
    "2037": "108103",
    "2038": "110898",
    "2039": "113250",
    "2040": "118348",
    "2041": "120902",
    "2042": "123511",
    "2043": "125147",
    "2044": "125873",
    "2045": "126001",
    "2046": "124439",
    "2047": "121470",
    "2048": "118249",
    "2049": "115514",
    "2050": "112350",
    "Age": "50-54"
  },
  {
    "2021": "56253",
    "2022": "55746",
    "2023": "55224",
    "2024": "53993",
    "2025": "54280",
    "2026": "56295",
    "2027": "57721",
    "2028": "59171",
    "2029": "61557",
    "2030": "63642",
    "2031": "65093",
    "2032": "66624",
    "2033": "68969",
    "2034": "71725",
    "2035": "74679",
    "2036": "77259",
    "2037": "78062",
    "2038": "82736",
    "2039": "87725",
    "2040": "90573",
    "2041": "96320",
    "2042": "104427",
    "2043": "107134",
    "2044": "109439",
    "2045": "114405",
    "2046": "116924",
    "2047": "119515",
    "2048": "121146",
    "2049": "121903",
    "2050": "122108",
    "Age": "55-59"
  },
  {
    "2021": "48221",
    "2022": "50223",
    "2023": "51423",
    "2024": "52493",
    "2025": "53006",
    "2026": "52666",
    "2027": "52242",
    "2028": "51816",
    "2029": "50722",
    "2030": "51054",
    "2031": "52997",
    "2032": "54369",
    "2033": "55743",
    "2034": "57992",
    "2035": "59983",
    "2036": "61409",
    "2037": "62897",
    "2038": "65145",
    "2039": "67775",
    "2040": "70615",
    "2041": "73112",
    "2042": "73885",
    "2043": "78370",
    "2044": "83151",
    "2045": "85887",
    "2046": "91386",
    "2047": "99090",
    "2048": "101684",
    "2049": "103922",
    "2050": "108692",
    "Age": "60-64"
  },
  {
    "2021": "31868",
    "2022": "33823",
    "2023": "36414",
    "2024": "38650",
    "2025": "41060",
    "2026": "43166",
    "2027": "44990",
    "2028": "46103",
    "2029": "47119",
    "2030": "47650",
    "2031": "47418",
    "2032": "47119",
    "2033": "46826",
    "2034": "45916",
    "2035": "46310",
    "2036": "48164",
    "2037": "49476",
    "2038": "50772",
    "2039": "52866",
    "2040": "54753",
    "2041": "56152",
    "2042": "57594",
    "2043": "59730",
    "2044": "62216",
    "2045": "64919",
    "2046": "67313",
    "2047": "68063",
    "2048": "72302",
    "2049": "76810",
    "2050": "79397",
    "Age": "65-69"
  },
  {
    "2021": "20594",
    "2022": "22044",
    "2023": "23188",
    "2024": "24434",
    "2025": "24937",
    "2026": "27065",
    "2027": "28763",
    "2028": "31012",
    "2029": "32959",
    "2030": "35077",
    "2031": "36945",
    "2032": "38588",
    "2033": "39622",
    "2034": "40587",
    "2035": "41146",
    "2036": "41043",
    "2037": "40888",
    "2038": "40742",
    "2039": "40042",
    "2040": "40501",
    "2041": "42243",
    "2042": "43487",
    "2043": "44697",
    "2044": "46611",
    "2045": "48371",
    "2046": "49733",
    "2047": "51112",
    "2048": "53101",
    "2049": "55400",
    "2050": "57919",
    "Age": "70-74"
  },
  {
    "2021": "11153",
    "2022": "11304",
    "2023": "12047",
    "2024": "13356",
    "2025": "15361",
    "2026": "16067",
    "2027": "17234",
    "2028": "18140",
    "2029": "19165",
    "2030": "19650",
    "2031": "21397",
    "2032": "22823",
    "2033": "24690",
    "2034": "26321",
    "2035": "28109",
    "2036": "29710",
    "2037": "31142",
    "2038": "32082",
    "2039": "32973",
    "2040": "33547",
    "2041": "33574",
    "2042": "33565",
    "2043": "33564",
    "2044": "33093",
    "2045": "33610",
    "2046": "35199",
    "2047": "36344",
    "2048": "37433",
    "2049": "39100",
    "2050": "40680",
    "Age": "75-79"
  },
  {
    "2021": "5799",
    "2022": "6913",
    "2023": "7421",
    "2024": "7649",
    "2025": "7766",
    "2026": "7565",
    "2027": "7755",
    "2028": "8320",
    "2029": "9256",
    "2030": "10714",
    "2031": "11205",
    "2032": "12074",
    "2033": "12746",
    "2034": "13536",
    "2035": "13987",
    "2036": "15315",
    "2037": "16436",
    "2038": "17878",
    "2039": "19152",
    "2040": "20560",
    "2041": "21842",
    "2042": "23012",
    "2043": "23818",
    "2044": "24597",
    "2045": "25152",
    "2046": "25288",
    "2047": "25403",
    "2048": "25522",
    "2049": "25269",
    "2050": "25802",
    "Age": "80-84"
  },
  {
    "2021": "2467",
    "2022": "2599",
    "2023": "2746",
    "2024": "2910",
    "2025": "3355",
    "2026": "4240",
    "2027": "4950",
    "2028": "5291",
    "2029": "5482",
    "2030": "5787",
    "2031": "6170",
    "2032": "6699",
    "2033": "7236",
    "2034": "7915",
    "2035": "9007",
    "2036": "9507",
    "2037": "10366",
    "2038": "11099",
    "2039": "12007",
    "2040": "12966",
    "2041": "14118",
    "2042": "15373",
    "2043": "16764",
    "2044": "18154",
    "2045": "19679",
    "2046": "21248",
    "2047": "22814",
    "2048": "24221",
    "2049": "25610",
    "2050": "26945",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_city_region, gender='jami').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_city_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='jami',
                    population=population
                )

print("Navoi female data import completed successfully!")
