import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_city_region, _ = Region.objects.get_or_create(name='Qashqadaryo', defaults={'svg_id': 'kashkadarya'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "1682982",
    "2022": "1722519",
    "2023": "1762013",
    "2024": "1800970",
    "2025": "1839292",
    "2026": "1876759",
    "2027": "1913233",
    "2028": "1948789",
    "2029": "1983280",
    "2030": "2016676",
    "2031": "2048931",
    "2032": "2080069",
    "2033": "2110110",
    "2034": "2138930",
    "2035": "2166762",
    "2036": "2193641",
    "2037": "2219779",
    "2038": "2245296",
    "2039": "2270360",
    "2040": "2295219",
    "2041": "2320211",
    "2042": "2345580",
    "2043": "2371445",
    "2044": "2397884",
    "2045": "2425029",
    "2046": "2452840",
    "2047": "2481234",
    "2048": "2510144",
    "2049": "2539401",
    "2050": "2568824",
    "Age": "Total"
  },
  {
    "2021": "197892",
    "2022": "210403",
    "2023": "221889",
    "2024": "229941",
    "2025": "234661",
    "2026": "236847",
    "2027": "235094",
    "2028": "232438",
    "2029": "229245",
    "2030": "225592",
    "2031": "221653",
    "2032": "217595",
    "2033": "213355",
    "2034": "208972",
    "2035": "204715",
    "2036": "200664",
    "2037": "197029",
    "2038": "193900",
    "2039": "191567",
    "2040": "190045",
    "2041": "189627",
    "2042": "190330",
    "2043": "192167",
    "2044": "195040",
    "2045": "198820",
    "2046": "203142",
    "2047": "207682",
    "2048": "212243",
    "2049": "216593",
    "2050": "220427",
    "Age": "0-4"
  },
  {
    "2021": "174376",
    "2022": "175816",
    "2023": "178304",
    "2024": "182839",
    "2025": "188564",
    "2026": "196384",
    "2027": "208712",
    "2028": "220035",
    "2029": "227984",
    "2030": "232664",
    "2031": "234867",
    "2032": "233182",
    "2033": "230620",
    "2034": "227529",
    "2035": "223986",
    "2036": "220160",
    "2037": "216214",
    "2038": "212086",
    "2039": "207815",
    "2040": "203668",
    "2041": "199724",
    "2042": "196192",
    "2043": "193159",
    "2044": "190911",
    "2045": "189461",
    "2046": "189098",
    "2047": "189836",
    "2048": "191690",
    "2049": "194563",
    "2050": "198329",
    "Age": "5-9"
  },
  {
    "2021": "151557",
    "2022": "155952",
    "2023": "158381",
    "2024": "162586",
    "2025": "168083",
    "2026": "173380",
    "2027": "174794",
    "2028": "177259",
    "2029": "181750",
    "2030": "187412",
    "2031": "195142",
    "2032": "207351",
    "2033": "218570",
    "2034": "226459",
    "2035": "231123",
    "2036": "233350",
    "2037": "231724",
    "2038": "229236",
    "2039": "226226",
    "2040": "222769",
    "2041": "219033",
    "2042": "215181",
    "2043": "211150",
    "2044": "206976",
    "2045": "202923",
    "2046": "199066",
    "2047": "195612",
    "2048": "192646",
    "2049": "190451",
    "2050": "189040",
    "Age": "10-14"
  },
  {
    "2021": "128867",
    "2022": "131841",
    "2023": "136738",
    "2024": "141089",
    "2025": "146114",
    "2026": "150618",
    "2027": "154953",
    "2028": "157353",
    "2029": "161527",
    "2030": "166978",
    "2031": "172233",
    "2032": "173636",
    "2033": "176092",
    "2034": "180558",
    "2035": "186188",
    "2036": "193865",
    "2037": "205979",
    "2038": "217091",
    "2039": "224906",
    "2040": "229539",
    "2041": "231775",
    "2042": "230205",
    "2043": "227801",
    "2044": "224884",
    "2045": "221522",
    "2046": "217881",
    "2047": "214118",
    "2048": "210172",
    "2049": "206079",
    "2050": "202100",
    "Age": "15-19"
  },
  {
    "2021": "135130",
    "2022": "131963",
    "2023": "131367",
    "2024": "129474",
    "2025": "127770",
    "2026": "128250",
    "2027": "131196",
    "2028": "135983",
    "2029": "140141",
    "2030": "144902",
    "2031": "149161",
    "2032": "153378",
    "2033": "155750",
    "2034": "159844",
    "2035": "165125",
    "2036": "170216",
    "2037": "171551",
    "2038": "173980",
    "2039": "178419",
    "2040": "184005",
    "2041": "191504",
    "2042": "203245",
    "2043": "213945",
    "2044": "221479",
    "2045": "225996",
    "2046": "228284",
    "2047": "226928",
    "2048": "224812",
    "2049": "222186",
    "2050": "219112",
    "Age": "20-24"
  },
  {
    "2021": "154348",
    "2022": "151089",
    "2023": "146091",
    "2024": "143833",
    "2025": "138487",
    "2026": "134605",
    "2027": "131787",
    "2028": "131449",
    "2029": "129819",
    "2030": "128353",
    "2031": "128924",
    "2032": "131752",
    "2033": "136299",
    "2034": "140222",
    "2035": "144788",
    "2036": "148884",
    "2037": "152974",
    "2038": "155247",
    "2039": "159193",
    "2040": "164274",
    "2041": "169260",
    "2042": "170660",
    "2043": "173159",
    "2044": "177542",
    "2045": "182946",
    "2046": "190103",
    "2047": "201361",
    "2048": "211624",
    "2049": "218904",
    "2050": "223345",
    "Age": "25-29"
  },
  {
    "2021": "150332",
    "2022": "151994",
    "2023": "153525",
    "2024": "153698",
    "2025": "155729",
    "2026": "152095",
    "2027": "149138",
    "2028": "144470",
    "2029": "142524",
    "2030": "137532",
    "2031": "133994",
    "2032": "131432",
    "2033": "131274",
    "2034": "129826",
    "2035": "128526",
    "2036": "129158",
    "2037": "131922",
    "2038": "136338",
    "2039": "140140",
    "2040": "144602",
    "2041": "148610",
    "2042": "152647",
    "2043": "154909",
    "2044": "158819",
    "2045": "163828",
    "2046": "168786",
    "2047": "170233",
    "2048": "172746",
    "2049": "177047",
    "2050": "182287",
    "Age": "30-34"
  },
  {
    "2021": "130695",
    "2022": "136824",
    "2023": "141493",
    "2024": "144109",
    "2025": "144951",
    "2026": "147527",
    "2027": "149122",
    "2028": "150648",
    "2029": "150850",
    "2030": "152950",
    "2031": "149518",
    "2032": "146833",
    "2033": "142448",
    "2034": "140757",
    "2035": "136044",
    "2036": "132763",
    "2037": "130390",
    "2038": "130362",
    "2039": "129049",
    "2040": "127872",
    "2041": "128563",
    "2042": "131305",
    "2043": "135657",
    "2044": "139403",
    "2045": "143819",
    "2046": "147786",
    "2047": "151795",
    "2048": "154039",
    "2049": "157893",
    "2050": "162806",
    "Age": "35-39"
  },
  {
    "2021": "100190",
    "2022": "104525",
    "2023": "109411",
    "2024": "114108",
    "2025": "121573",
    "2026": "128412",
    "2027": "134340",
    "2028": "138886",
    "2029": "141455",
    "2030": "142290",
    "2031": "144844",
    "2032": "146438",
    "2033": "147999",
    "2034": "148254",
    "2035": "150417",
    "2036": "147138",
    "2037": "144645",
    "2038": "140456",
    "2039": "138932",
    "2040": "134409",
    "2041": "131304",
    "2042": "129071",
    "2043": "129144",
    "2044": "127939",
    "2045": "126862",
    "2046": "127602",
    "2047": "130329",
    "2048": "134628",
    "2049": "138319",
    "2050": "142678",
    "Age": "40-44"
  },
  {
    "2021": "84794",
    "2022": "86443",
    "2023": "88458",
    "2024": "91906",
    "2025": "95251",
    "2026": "98644",
    "2027": "102864",
    "2028": "107626",
    "2029": "112192",
    "2030": "119481",
    "2031": "126159",
    "2032": "131964",
    "2033": "136435",
    "2034": "138988",
    "2035": "139839",
    "2036": "142396",
    "2037": "144000",
    "2038": "145589",
    "2039": "145881",
    "2040": "148086",
    "2041": "144931",
    "2042": "142583",
    "2043": "138551",
    "2044": "137157",
    "2045": "132794",
    "2046": "129827",
    "2047": "127697",
    "2048": "127832",
    "2049": "126695",
    "2050": "125675",
    "Age": "45-49"
  },
  {
    "2021": "72869",
    "2022": "75297",
    "2023": "76505",
    "2024": "79356",
    "2025": "80764",
    "2026": "83189",
    "2027": "84802",
    "2028": "86772",
    "2029": "90150",
    "2030": "93422",
    "2031": "96748",
    "2032": "100880",
    "2033": "105544",
    "2034": "110011",
    "2035": "117153",
    "2036": "123695",
    "2037": "129390",
    "2038": "133790",
    "2039": "136323",
    "2040": "137196",
    "2041": "139760",
    "2042": "141384",
    "2043": "143002",
    "2044": "143338",
    "2045": "145580",
    "2046": "142547",
    "2047": "140323",
    "2048": "136423",
    "2049": "135124",
    "2050": "130894",
    "Age": "50-54"
  },
  {
    "2021": "68402",
    "2022": "68328",
    "2023": "69177",
    "2024": "68894",
    "2025": "69655",
    "2026": "70817",
    "2027": "73183",
    "2028": "74365",
    "2029": "77143",
    "2030": "78521",
    "2031": "80905",
    "2032": "82494",
    "2033": "84430",
    "2034": "87742",
    "2035": "90940",
    "2036": "94201",
    "2037": "98236",
    "2038": "102788",
    "2039": "107151",
    "2040": "114124",
    "2041": "120514",
    "2042": "126080",
    "2043": "130394",
    "2044": "132905",
    "2045": "133816",
    "2046": "136398",
    "2047": "138042",
    "2048": "139677",
    "2049": "140040",
    "2050": "142294",
    "Age": "55-59"
  },
  {
    "2021": "56748",
    "2022": "59685",
    "2023": "61736",
    "2024": "63118",
    "2025": "64252",
    "2026": "64886",
    "2027": "64835",
    "2028": "65691",
    "2029": "65456",
    "2030": "66238",
    "2031": "67396",
    "2032": "69693",
    "2033": "70864",
    "2034": "73555",
    "2035": "74910",
    "2036": "77248",
    "2037": "78816",
    "2038": "80712",
    "2039": "83942",
    "2040": "87044",
    "2041": "90226",
    "2042": "94141",
    "2043": "98550",
    "2044": "102793",
    "2045": "109551",
    "2046": "115747",
    "2047": "121140",
    "2048": "125327",
    "2049": "127789",
    "2050": "128728",
    "Age": "60-64"
  },
  {
    "2021": "35192",
    "2022": "37801",
    "2023": "41453",
    "2024": "45185",
    "2025": "48555",
    "2026": "51811",
    "2027": "54505",
    "2028": "56416",
    "2029": "57731",
    "2030": "58839",
    "2031": "59501",
    "2032": "59516",
    "2033": "60403",
    "2034": "60260",
    "2035": "61087",
    "2036": "62255",
    "2037": "64465",
    "2038": "65633",
    "2039": "68207",
    "2040": "69539",
    "2041": "71814",
    "2042": "73360",
    "2043": "75211",
    "2044": "78331",
    "2045": "81314",
    "2046": "84392",
    "2047": "88140",
    "2048": "92350",
    "2049": "96419",
    "2050": "102861",
    "Age": "65-69"
  },
  {
    "2021": "20313",
    "2022": "22094",
    "2023": "23787",
    "2024": "26099",
    "2025": "27845",
    "2026": "30541",
    "2027": "32845",
    "2028": "36070",
    "2029": "39376",
    "2030": "42382",
    "2031": "45301",
    "2032": "47723",
    "2033": "49487",
    "2034": "50741",
    "2035": "51832",
    "2036": "52539",
    "2037": "52648",
    "2038": "53567",
    "2039": "53540",
    "2040": "54411",
    "2041": "55583",
    "2042": "57674",
    "2043": "58840",
    "2044": "61257",
    "2045": "62562",
    "2046": "64745",
    "2047": "66253",
    "2048": "68031",
    "2049": "70989",
    "2050": "73792",
    "Age": "70-74"
  },
  {
    "2021": "10120",
    "2022": "10911",
    "2023": "12210",
    "2024": "13196",
    "2025": "15090",
    "2026": "16179",
    "2027": "17655",
    "2028": "19048",
    "2029": "20934",
    "2030": "22437",
    "2031": "24685",
    "2032": "26632",
    "2033": "29348",
    "2034": "32141",
    "2035": "34711",
    "2036": "37222",
    "2037": "39308",
    "2038": "40883",
    "2039": "42047",
    "2040": "43094",
    "2041": "43831",
    "2042": "44034",
    "2043": "44966",
    "2044": "45062",
    "2045": "45965",
    "2046": "47117",
    "2047": "49026",
    "2048": "50161",
    "2049": "52340",
    "2050": "53572",
    "Age": "75-79"
  },
  {
    "2021": "6827",
    "2022": "7113",
    "2023": "6873",
    "2024": "6675",
    "2025": "6793",
    "2026": "7039",
    "2027": "7661",
    "2028": "8597",
    "2029": "9296",
    "2030": "10714",
    "2031": "11529",
    "2032": "12659",
    "2033": "13720",
    "2034": "15134",
    "2035": "16349",
    "2036": "18084",
    "2037": "19617",
    "2038": "21736",
    "2039": "23925",
    "2040": "25966",
    "2041": "27973",
    "2042": "29647",
    "2043": "30970",
    "2044": "31992",
    "2045": "32946",
    "2046": "33670",
    "2047": "33946",
    "2048": "34837",
    "2049": "35036",
    "2050": "35910",
    "Age": "80-84"
  },
  {
    "2021": "4330",
    "2022": "4438",
    "2023": "4615",
    "2024": "4864",
    "2025": "5157",
    "2026": "5533",
    "2027": "5745",
    "2028": "5682",
    "2029": "5707",
    "2030": "5970",
    "2031": "6372",
    "2032": "6910",
    "2033": "7473",
    "2034": "7937",
    "2035": "9029",
    "2036": "9802",
    "2037": "10871",
    "2038": "11901",
    "2039": "13096",
    "2040": "14574",
    "2041": "16178",
    "2042": "17840",
    "2043": "19872",
    "2044": "22055",
    "2045": "24325",
    "2046": "26651",
    "2047": "28772",
    "2048": "30907",
    "2049": "32933",
    "2050": "34973",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_city_region, gender='ayol').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_city_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='ayol',
                    population=population
                )

print("Navoi female data import completed successfully!")
