import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_region, _ = Region.objects.get_or_create(name='Respublika', defaults={'svg_id': 'respublika'})

# Data to be imported
navoi_male_data =[
  {
    "2021": "17744158",
    "2022": "18110531",
    "2023": "18473480",
    "2024": "18829253",
    "2025": "19178139",
    "2026": "19519244",
    "2027": "19851835",
    "2028": "20176802",
    "2029": "20492161",
    "2030": "20796857",
    "2031": "21089686",
    "2032": "21370481",
    "2033": "21639460",
    "2034": "21895504",
    "2035": "22140638",
    "2036": "22374990",
    "2037": "22600906",
    "2038": "22819530",
    "2039": "23032681",
    "2040": "23242893",
    "2041": "23453427",
    "2042": "23666532",
    "2043": "23883231",
    "2044": "24104148",
    "2045": "24330525",
    "2046": "24562019",
    "2047": "24798072",
    "2048": "25038170",
    "2049": "25280997",
    "2050": "25525050",
    "Age": "Total"
  },
  {
    "2021": "2043649",
    "2022": "2152440",
    "2023": "2232851",
    "2024": "2288478",
    "2025": "2320588",
    "2026": "2327834",
    "2027": "2315521",
    "2028": "2297484",
    "2029": "2275734",
    "2030": "2249222",
    "2031": "2217846",
    "2032": "2182310",
    "2033": "2142071",
    "2034": "2097928",
    "2035": "2053061",
    "2036": "2008996",
    "2037": "1968359",
    "2038": "1932189",
    "2039": "1903561",
    "2040": "1882942",
    "2041": "1873320",
    "2042": "1874605",
    "2043": "1886639",
    "2044": "1908267",
    "2045": "1938183",
    "2046": "1972916",
    "2047": "2009664",
    "2048": "2046939",
    "2049": "2082910",
    "2050": "2114964",
    "Age": "0-4"
  },
  {
    "2021": "1782028",
    "2022": "1809383",
    "2023": "1851704",
    "2024": "1894688",
    "2025": "1949252",
    "2026": "2029554",
    "2027": "2136187",
    "2028": "2214902",
    "2029": "2269492",
    "2030": "2301173",
    "2031": "2308564",
    "2032": "2296812",
    "2033": "2279537",
    "2034": "2258677",
    "2035": "2233174",
    "2036": "2202906",
    "2037": "2168560",
    "2038": "2129588",
    "2039": "2086771",
    "2040": "2043244",
    "2041": "2000494",
    "2042": "1961104",
    "2043": "1926076",
    "2044": "1898452",
    "2045": "1878670",
    "2046": "1869688",
    "2047": "1871409",
    "2048": "1883685",
    "2049": "1905381",
    "2050": "1935223",
    "Age": "5-9"
  },
  {
    "2021": "1625543",
    "2022": "1643707",
    "2023": "1655813",
    "2024": "1684126",
    "2025": "1727729",
    "2026": "1772682",
    "2027": "1799448",
    "2028": "1841162",
    "2029": "1883441",
    "2030": "1937106",
    "2031": "2016144",
    "2032": "2121336",
    "2033": "2198946",
    "2034": "2252923",
    "2035": "2284441",
    "2036": "2292087",
    "2037": "2280878",
    "2038": "2264276",
    "2039": "2244159",
    "2040": "2219472",
    "2041": "2190095",
    "2042": "2156706",
    "2043": "2118756",
    "2044": "2077008",
    "2045": "2034563",
    "2046": "1992870",
    "2047": "1954478",
    "2048": "1920358",
    "2049": "1893521",
    "2050": "1874380",
    "Age": "10-14"
  },
  {
    "2021": "1343963",
    "2022": "1385103",
    "2023": "1457449",
    "2024": "1518744",
    "2025": "1576288",
    "2026": "1615147",
    "2027": "1632839",
    "2028": "1644708",
    "2029": "1672743",
    "2030": "1715908",
    "2031": "1760418",
    "2032": "1786862",
    "2033": "1828212",
    "2034": "1870089",
    "2035": "1923209",
    "2036": "2001332",
    "2037": "2105326",
    "2038": "2181972",
    "2039": "2235385",
    "2040": "2266720",
    "2041": "2274577",
    "2042": "2263880",
    "2043": "2247920",
    "2044": "2228515",
    "2045": "2204603",
    "2046": "2176060",
    "2047": "2143553",
    "2048": "2106532",
    "2049": "2065743",
    "2050": "2024251",
    "Age": "15-19"
  },
  {
    "2021": "1353528",
    "2022": "1322197",
    "2023": "1306145",
    "2024": "1308420",
    "2025": "1314858",
    "2026": "1339188",
    "2027": "1379333",
    "2028": "1450250",
    "2029": "1510103",
    "2030": "1566360",
    "2031": "1604352",
    "2032": "1621739",
    "2033": "1633609",
    "2034": "1661529",
    "2035": "1704255",
    "2036": "1748223",
    "2037": "1774274",
    "2038": "1815203",
    "2039": "1856623",
    "2040": "1909075",
    "2041": "1985945",
    "2042": "2088236",
    "2043": "2163498",
    "2044": "2216099",
    "2045": "2247178",
    "2046": "2255359",
    "2047": "2245410",
    "2048": "2230375",
    "2049": "2211965",
    "2050": "2189110",
    "Age": "20-24"
  },
  {
    "2021": "1611697",
    "2022": "1574038",
    "2023": "1518646",
    "2024": "1472066",
    "2025": "1407305",
    "2026": "1351328",
    "2027": "1321377",
    "2028": "1306090",
    "2029": "1308656",
    "2030": "1315051",
    "2031": "1338870",
    "2032": "1377897",
    "2033": "1447075",
    "2034": "1505181",
    "2035": "1559973",
    "2036": "1597101",
    "2037": "1614302",
    "2038": "1626266",
    "2039": "1654018",
    "2040": "1696143",
    "2041": "1739455",
    "2042": "1765111",
    "2043": "1805604",
    "2044": "1846472",
    "2045": "1898024",
    "2046": "1973252",
    "2047": "2073411",
    "2048": "2146993",
    "2049": "2198642",
    "2050": "2229455",
    "Age": "25-29"
  },
  {
    "2021": "1585097",
    "2022": "1602726",
    "2023": "1613741",
    "2024": "1618145",
    "2025": "1620268",
    "2026": "1594033",
    "2027": "1558063",
    "2028": "1504897",
    "2029": "1460691",
    "2030": "1398562",
    "2031": "1344968",
    "2032": "1316667",
    "2033": "1302303",
    "2034": "1305268",
    "2035": "1311730",
    "2036": "1335104",
    "2037": "1373037",
    "2038": "1440498",
    "2039": "1496944",
    "2040": "1550412",
    "2041": "1586825",
    "2042": "1603938",
    "2043": "1616031",
    "2044": "1643629",
    "2045": "1685216",
    "2046": "1728010",
    "2047": "1753409",
    "2048": "1793497",
    "2049": "1833767",
    "2050": "1884350",
    "Age": "30-34"
  },
  {
    "2021": "1377146",
    "2022": "1438246",
    "2023": "1486037",
    "2024": "1510839",
    "2025": "1534411",
    "2026": "1556714",
    "2027": "1573733",
    "2028": "1584660",
    "2029": "1589382",
    "2030": "1592282",
    "2031": "1567633",
    "2032": "1533819",
    "2033": "1483174",
    "2034": "1441501",
    "2035": "1382096",
    "2036": "1330911",
    "2037": "1304257",
    "2038": "1290836",
    "2039": "1294229",
    "2040": "1300800",
    "2041": "1323800",
    "2042": "1360760",
    "2043": "1426634",
    "2044": "1481582",
    "2045": "1533883",
    "2046": "1569726",
    "2047": "1586855",
    "2048": "1599131",
    "2049": "1626585",
    "2050": "1667621",
    "Age": "35-39"
  },
  {
    "2021": "1100688",
    "2022": "1140128",
    "2023": "1180902",
    "2024": "1228004",
    "2025": "1285985",
    "2026": "1348967",
    "2027": "1407624",
    "2028": "1453717",
    "2029": "1477705",
    "2030": "1500825",
    "2031": "1522878",
    "2032": "1539940",
    "2033": "1551266",
    "2034": "1556636",
    "2035": "1560465",
    "2036": "1537391",
    "2037": "1505575",
    "2038": "1457234",
    "2039": "1417768",
    "2040": "1360730",
    "2041": "1311601",
    "2042": "1286356",
    "2043": "1273775",
    "2044": "1277577",
    "2045": "1284315",
    "2046": "1307046",
    "2047": "1343229",
    "2048": "1407761",
    "2049": "1461499",
    "2050": "1512862",
    "Age": "40-44"
  },
  {
    "2021": "970084",
    "2022": "975691",
    "2023": "991968",
    "2024": "1023114",
    "2025": "1049505",
    "2026": "1075862",
    "2027": "1113876",
    "2028": "1153212",
    "2029": "1198740",
    "2030": "1254874",
    "2031": "1315939",
    "2032": "1372880",
    "2033": "1417815",
    "2034": "1441399",
    "2035": "1464391",
    "2036": "1486488",
    "2037": "1503785",
    "2038": "1515557",
    "2039": "1521504",
    "2040": "1526132",
    "2041": "1504500",
    "2042": "1474460",
    "2043": "1428167",
    "2044": "1390625",
    "2045": "1335780",
    "2046": "1288584",
    "2047": "1264685",
    "2048": "1252913",
    "2049": "1257128",
    "2050": "1264051",
    "Age": "45-49"
  },
  {
    "2021": "811113",
    "2022": "846955",
    "2023": "873505",
    "2024": "897775",
    "2025": "920339",
    "2026": "939744",
    "2027": "945208",
    "2028": "961005",
    "2029": "991174",
    "2030": "1016766",
    "2031": "1042401",
    "2032": "1079279",
    "2033": "1117447",
    "2034": "1161655",
    "2035": "1216150",
    "2036": "1275469",
    "2037": "1330816",
    "2038": "1374660",
    "2039": "1397917",
    "2040": "1420816",
    "2041": "1443012",
    "2042": "1460582",
    "2043": "1472807",
    "2044": "1479319",
    "2045": "1484739",
    "2046": "1464628",
    "2047": "1436401",
    "2048": "1392209",
    "2049": "1356568",
    "2050": "1303997",
    "Age": "50-54"
  },
  {
    "2021": "725184",
    "2022": "723284",
    "2023": "728610",
    "2024": "732442",
    "2025": "746816",
    "2026": "773344",
    "2027": "807597",
    "2028": "833063",
    "2029": "856329",
    "2030": "878107",
    "2031": "897151",
    "2032": "902868",
    "2033": "918434",
    "2034": "947689",
    "2035": "972598",
    "2036": "997640",
    "2037": "1033314",
    "2038": "1070251",
    "2039": "1113041",
    "2040": "1165681",
    "2041": "1222999",
    "2042": "1276466",
    "2043": "1318989",
    "2044": "1341873",
    "2045": "1364689",
    "2046": "1387051",
    "2047": "1404943",
    "2048": "1417639",
    "2049": "1424701",
    "2050": "1430921",
    "Age": "55-59"
  },
  {
    "2021": "615116",
    "2022": "640930",
    "2023": "655170",
    "2024": "666219",
    "2025": "670242",
    "2026": "668242",
    "2027": "667098",
    "2028": "672775",
    "2029": "676972",
    "2030": "690952",
    "2031": "716223",
    "2032": "748627",
    "2033": "772897",
    "2034": "795040",
    "2035": "815979",
    "2036": "834704",
    "2037": "840932",
    "2038": "856331",
    "2039": "884433",
    "2040": "908487",
    "2041": "932796",
    "2042": "966879",
    "2043": "1002218",
    "2044": "1043184",
    "2045": "1093415",
    "2046": "1148109",
    "2047": "1199068",
    "2048": "1239764",
    "2049": "1262064",
    "2050": "1284614",
    "Age": "60-64"
  },
  {
    "2021": "380016",
    "2022": "405587",
    "2023": "442991",
    "2024": "476189",
    "2025": "508590",
    "2026": "539116",
    "2027": "562163",
    "2028": "575314",
    "2029": "585786",
    "2030": "590243",
    "2031": "589638",
    "2032": "589765",
    "2033": "596093",
    "2034": "600980",
    "2035": "614640",
    "2036": "638457",
    "2037": "668648",
    "2038": "691522",
    "2039": "712359",
    "2040": "732277",
    "2041": "750532",
    "2042": "757365",
    "2043": "772507",
    "2044": "799151",
    "2045": "822144",
    "2046": "845491",
    "2047": "877572",
    "2048": "910884",
    "2049": "949451",
    "2050": "996490",
    "Age": "65-69"
  },
  {
    "2021": "222695",
    "2022": "241845",
    "2023": "258108",
    "2024": "275714",
    "2025": "290460",
    "2026": "314184",
    "2027": "336083",
    "2028": "367909",
    "2029": "396259",
    "2030": "424117",
    "2031": "450645",
    "2032": "470895",
    "2033": "483081",
    "2034": "493073",
    "2035": "498121",
    "2036": "499105",
    "2037": "500635",
    "2038": "507584",
    "2039": "513137",
    "2040": "526261",
    "2041": "548239",
    "2042": "575707",
    "2043": "596829",
    "2044": "616002",
    "2045": "634551",
    "2046": "652014",
    "2047": "659379",
    "2048": "674033",
    "2049": "698731",
    "2050": "720215",
    "Age": "70-74"
  },
  {
    "2021": "104790",
    "2022": "109739",
    "2023": "120277",
    "2024": "134798",
    "2025": "153788",
    "2026": "165829",
    "2027": "180788",
    "2028": "193328",
    "2029": "207185",
    "2030": "219426",
    "2031": "238442",
    "2032": "256316",
    "2033": "281873",
    "2034": "304780",
    "2035": "327499",
    "2036": "349451",
    "2037": "366418",
    "2038": "377345",
    "2039": "386530",
    "2040": "391929",
    "2041": "394381",
    "2042": "397160",
    "2043": "404464",
    "2044": "410481",
    "2045": "422698",
    "2046": "442228",
    "2047": "466150",
    "2048": "484825",
    "2049": "501601",
    "2050": "518071",
    "Age": "75-79"
  },
  {
    "2021": "65342",
    "2022": "70053",
    "2023": "68692",
    "2024": "65970",
    "2025": "65295",
    "2026": "65857",
    "2027": "69932",
    "2028": "77085",
    "2029": "86710",
    "2030": "99598",
    "2031": "107986",
    "2032": "118598",
    "2033": "127443",
    "2034": "137455",
    "2035": "146878",
    "2036": "160842",
    "2037": "174267",
    "2038": "193034",
    "2039": "209993",
    "2040": "226989",
    "2041": "243690",
    "2042": "256814",
    "2043": "265938",
    "2044": "273823",
    "2045": "279139",
    "2046": "282579",
    "2047": "286156",
    "2048": "293205",
    "2049": "299133",
    "2050": "309688",
    "Age": "80-84"
  },
  {
    "2021": "26479",
    "2022": "28477",
    "2023": "30873",
    "2024": "33525",
    "2025": "36420",
    "2026": "41619",
    "2027": "44965",
    "2028": "45241",
    "2029": "45060",
    "2030": "46284",
    "2031": "49589",
    "2032": "53872",
    "2033": "58183",
    "2034": "63700",
    "2035": "71979",
    "2036": "78782",
    "2037": "87523",
    "2038": "95186",
    "2039": "104308",
    "2040": "114782",
    "2041": "127165",
    "2042": "140404",
    "2043": "156378",
    "2044": "172089",
    "2045": "188735",
    "2046": "206410",
    "2047": "222300",
    "2048": "237427",
    "2049": "251605",
    "2050": "264785",
    "Age": "85+"
  }
]
# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_region, gender='erkak').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='erkak',
                    population=population
                )

print("Navoi male data import completed successfully!")
