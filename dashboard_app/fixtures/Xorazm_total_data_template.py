import os
import django

# Configure Django settings
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from dashboard_app.models import Region, StatisticsData
from django.db import transaction

# First, get or create the Navoi region
tashkent_city_region, _ = Region.objects.get_or_create(name='Xorazm', defaults={'svg_id': 'khorezm'})

# Data to be imported
navoi_male_data = [
  {
    "2021": "1924162",
    "2022": "1959951",
    "2023": "1995619",
    "2024": "2030748",
    "2025": "2065336",
    "2026": "2099240",
    "2027": "2132314",
    "2028": "2164641",
    "2029": "2196077",
    "2030": "2226510",
    "2031": "2255764",
    "2032": "2283744",
    "2033": "2310412",
    "2034": "2335614",
    "2035": "2359537",
    "2036": "2382206",
    "2037": "2403808",
    "2038": "2424416",
    "2039": "2444149",
    "2040": "2463209",
    "2041": "2481870",
    "2042": "2500322",
    "2043": "2518663",
    "2044": "2536989",
    "2045": "2555423",
    "2046": "2573984",
    "2047": "2592647",
    "2048": "2611412",
    "2049": "2630188",
    "2050": "2648879",
    "Age": "Total"
  },
  {
    "2021": "199238",
    "2022": "208495",
    "2023": "215339",
    "2024": "220972",
    "2025": "225184",
    "2026": "228799",
    "2027": "227871",
    "2028": "226262",
    "2029": "224256",
    "2030": "221765",
    "2031": "218771",
    "2032": "215327",
    "2033": "211316",
    "2034": "206735",
    "2035": "201890",
    "2036": "196979",
    "2037": "192301",
    "2038": "187968",
    "2039": "184257",
    "2040": "181169",
    "2041": "178947",
    "2042": "177584",
    "2043": "177111",
    "2044": "177484",
    "2045": "178649",
    "2046": "180348",
    "2047": "182375",
    "2048": "184621",
    "2049": "186931",
    "2050": "189065",
    "Age": "0-4"
  },
  {
    "2021": "186874",
    "2022": "189100",
    "2023": "191101",
    "2024": "191911",
    "2025": "194649",
    "2026": "198039",
    "2027": "207169",
    "2028": "213905",
    "2029": "219466",
    "2030": "223637",
    "2031": "227244",
    "2032": "226356",
    "2033": "224810",
    "2034": "222875",
    "2035": "220463",
    "2036": "217555",
    "2037": "214204",
    "2038": "210292",
    "2039": "205817",
    "2040": "201080",
    "2041": "196276",
    "2042": "191702",
    "2043": "187465",
    "2044": "183841",
    "2045": "180829",
    "2046": "178670",
    "2047": "177355",
    "2048": "176916",
    "2049": "177309",
    "2050": "178481",
    "Age": "5-9"
  },
  {
    "2021": "177561",
    "2022": "176109",
    "2023": "178556",
    "2024": "179141",
    "2025": "182260",
    "2026": "185942",
    "2027": "188137",
    "2028": "190121",
    "2029": "190923",
    "2030": "193644",
    "2031": "196991",
    "2032": "206044",
    "2033": "212710",
    "2034": "218228",
    "2035": "222373",
    "2036": "225977",
    "2037": "225122",
    "2038": "223627",
    "2039": "221748",
    "2040": "219396",
    "2041": "216555",
    "2042": "213277",
    "2043": "209444",
    "2044": "205054",
    "2045": "200404",
    "2046": "195686",
    "2047": "191193",
    "2048": "187030",
    "2049": "183470",
    "2050": "180513",
    "Age": "10-14"
  },
  {
    "2021": "150916",
    "2022": "156319",
    "2023": "162346",
    "2024": "169801",
    "2025": "174561",
    "2026": "176464",
    "2027": "175005",
    "2028": "177441",
    "2029": "178031",
    "2030": "181146",
    "2031": "184807",
    "2032": "186981",
    "2033": "188959",
    "2034": "189771",
    "2035": "192495",
    "2036": "195818",
    "2037": "204804",
    "2038": "211407",
    "2039": "216881",
    "2040": "220997",
    "2041": "224587",
    "2042": "223757",
    "2043": "222313",
    "2044": "220490",
    "2045": "218201",
    "2046": "215426",
    "2047": "212218",
    "2048": "208459",
    "2049": "204145",
    "2050": "199573",
    "Age": "15-19"
  },
  {
    "2021": "151990",
    "2022": "149460",
    "2023": "148368",
    "2024": "147904",
    "2025": "147610",
    "2026": "150612",
    "2027": "155884",
    "2028": "161717",
    "2029": "168964",
    "2030": "173555",
    "2031": "175396",
    "2032": "173977",
    "2033": "176482",
    "2034": "177160",
    "2035": "180277",
    "2036": "183846",
    "2037": "185939",
    "2038": "187917",
    "2039": "188788",
    "2040": "191539",
    "2041": "194800",
    "2042": "203620",
    "2043": "210056",
    "2044": "215406",
    "2045": "219417",
    "2046": "222956",
    "2047": "222191",
    "2048": "220874",
    "2049": "219187",
    "2050": "217038",
    "Age": "20-24"
  },
  {
    "2021": "170012",
    "2022": "165956",
    "2023": "159674",
    "2024": "157189",
    "2025": "154766",
    "2026": "152119",
    "2027": "149796",
    "2028": "148872",
    "2029": "148531",
    "2030": "148293",
    "2031": "151221",
    "2032": "156306",
    "2033": "161891",
    "2034": "168886",
    "2035": "173340",
    "2036": "175214",
    "2037": "173898",
    "2038": "176439",
    "2039": "177109",
    "2040": "180168",
    "2041": "183678",
    "2042": "185771",
    "2043": "187788",
    "2044": "188693",
    "2045": "191432",
    "2046": "194587",
    "2047": "203178",
    "2048": "209391",
    "2049": "214588",
    "2050": "218500",
    "Age": "25-29"
  },
  {
    "2021": "168378",
    "2022": "170405",
    "2023": "172010",
    "2024": "173913",
    "2025": "172417",
    "2026": "168348",
    "2027": "164540",
    "2028": "158540",
    "2029": "156274",
    "2030": "154037",
    "2031": "151583",
    "2032": "149432",
    "2033": "148631",
    "2034": "148375",
    "2035": "148177",
    "2036": "151045",
    "2037": "155990",
    "2038": "161391",
    "2039": "168201",
    "2040": "172553",
    "2041": "174445",
    "2042": "173202",
    "2043": "175769",
    "2044": "176453",
    "2045": "179494",
    "2046": "182977",
    "2047": "185069",
    "2048": "187100",
    "2049": "188015",
    "2050": "190728",
    "Age": "30-34"
  },
  {
    "2021": "156733",
    "2022": "161377",
    "2023": "164152",
    "2024": "163749",
    "2025": "164537",
    "2026": "165664",
    "2027": "167630",
    "2028": "169201",
    "2029": "171115",
    "2030": "169744",
    "2031": "165890",
    "2032": "162330",
    "2033": "156593",
    "2034": "154516",
    "2035": "152435",
    "2036": "150135",
    "2037": "148123",
    "2038": "147418",
    "2039": "147233",
    "2040": "147071",
    "2041": "149892",
    "2042": "154726",
    "2043": "159984",
    "2044": "166649",
    "2045": "170923",
    "2046": "172837",
    "2047": "171664",
    "2048": "174250",
    "2049": "174939",
    "2050": "177944",
    "Age": "35-39"
  },
  {
    "2021": "129712",
    "2022": "133722",
    "2023": "138494",
    "2024": "142556",
    "2025": "148187",
    "2026": "153819",
    "2027": "158316",
    "2028": "161037",
    "2029": "160664",
    "2030": "161478",
    "2031": "162610",
    "2032": "164570",
    "2033": "166146",
    "2034": "168089",
    "2035": "166832",
    "2036": "163154",
    "2037": "159789",
    "2038": "154257",
    "2039": "152322",
    "2040": "150360",
    "2041": "148181",
    "2042": "146281",
    "2043": "145654",
    "2044": "145530",
    "2045": "145405",
    "2046": "148196",
    "2047": "152946",
    "2048": "158094",
    "2049": "164642",
    "2050": "168848",
    "Age": "40-44"
  },
  {
    "2021": "118312",
    "2022": "117939",
    "2023": "118749",
    "2024": "121979",
    "2025": "124498",
    "2026": "127089",
    "2027": "130987",
    "2028": "135638",
    "2029": "139596",
    "2030": "145096",
    "2031": "150605",
    "2032": "155014",
    "2033": "157714",
    "2034": "157389",
    "2035": "158240",
    "2036": "159398",
    "2037": "161366",
    "2038": "162954",
    "2039": "164909",
    "2040": "163744",
    "2041": "160216",
    "2042": "157018",
    "2043": "151672",
    "2044": "149863",
    "2045": "148011",
    "2046": "145939",
    "2047": "144140",
    "2048": "143575",
    "2049": "143504",
    "2050": "143411",
    "Age": "45-49"
  },
  {
    "2021": "89939",
    "2022": "97744",
    "2023": "103639",
    "2024": "108155",
    "2025": "111968",
    "2026": "115092",
    "2027": "114754",
    "2028": "115569",
    "2029": "118738",
    "2030": "121210",
    "2031": "123761",
    "2032": "127577",
    "2033": "132130",
    "2034": "136008",
    "2035": "141391",
    "2036": "146787",
    "2037": "151111",
    "2038": "153791",
    "2039": "153516",
    "2040": "154408",
    "2041": "155600",
    "2042": "157582",
    "2043": "159186",
    "2044": "161148",
    "2045": "160076",
    "2046": "156705",
    "2047": "153675",
    "2048": "148521",
    "2049": "146833",
    "2050": "145084",
    "Age": "50-54"
  },
  {
    "2021": "76596",
    "2022": "76373",
    "2023": "77566",
    "2024": "79411",
    "2025": "82260",
    "2026": "86465",
    "2027": "93942",
    "2028": "99583",
    "2029": "103910",
    "2030": "107577",
    "2031": "110614",
    "2032": "110367",
    "2033": "111217",
    "2034": "114334",
    "2035": "116767",
    "2036": "119287",
    "2037": "123013",
    "2038": "127452",
    "2039": "131245",
    "2040": "136489",
    "2041": "141748",
    "2042": "145967",
    "2043": "148617",
    "2044": "148404",
    "2045": "149351",
    "2046": "150596",
    "2047": "152602",
    "2048": "154224",
    "2049": "156171",
    "2050": "155195",
    "Age": "55-59"
  },
  {
    "2021": "64364",
    "2022": "67581",
    "2023": "69372",
    "2024": "70483",
    "2025": "71376",
    "2026": "71523",
    "2027": "71365",
    "2028": "72542",
    "2029": "74328",
    "2030": "77058",
    "2031": "81055",
    "2032": "88107",
    "2033": "93429",
    "2034": "97521",
    "2035": "101008",
    "2036": "103940",
    "2037": "103830",
    "2038": "104737",
    "2039": "107781",
    "2040": "110165",
    "2041": "112646",
    "2042": "116250",
    "2043": "120535",
    "2044": "124220",
    "2045": "129281",
    "2046": "134359",
    "2047": "138432",
    "2048": "141033",
    "2049": "140894",
    "2050": "141898",
    "Age": "60-64"
  },
  {
    "2021": "38650",
    "2022": "41434",
    "2023": "45444",
    "2024": "49596",
    "2025": "53452",
    "2026": "57391",
    "2027": "60293",
    "2028": "61953",
    "2029": "63019",
    "2030": "63912",
    "2031": "64165",
    "2032": "64126",
    "2033": "65306",
    "2034": "67032",
    "2035": "69622",
    "2036": "73359",
    "2037": "79861",
    "2038": "84783",
    "2039": "88582",
    "2040": "91847",
    "2041": "94644",
    "2042": "94705",
    "2043": "95681",
    "2044": "98625",
    "2045": "100945",
    "2046": "103372",
    "2047": "106814",
    "2048": "110890",
    "2049": "114422",
    "2050": "119219",
    "Age": "65-69"
  },
  {
    "2021": "23303",
    "2022": "25139",
    "2023": "27063",
    "2024": "29045",
    "2025": "30277",
    "2026": "32527",
    "2027": "34945",
    "2028": "38409",
    "2029": "41995",
    "2030": "45337",
    "2031": "48781",
    "2032": "51339",
    "2033": "52868",
    "2034": "53901",
    "2035": "54800",
    "2036": "55182",
    "2037": "55286",
    "2038": "56461",
    "2039": "58106",
    "2040": "60514",
    "2041": "63931",
    "2042": "69760",
    "2043": "74199",
    "2044": "77643",
    "2045": "80631",
    "2046": "83244",
    "2047": "83488",
    "2048": "84525",
    "2049": "87308",
    "2050": "89519",
    "Age": "70-74"
  },
  {
    "2021": "9831",
    "2022": "10467",
    "2023": "11606",
    "2024": "13344",
    "2025": "16006",
    "2026": "17748",
    "2027": "19214",
    "2028": "20711",
    "2029": "22268",
    "2030": "23321",
    "2031": "25170",
    "2032": "27170",
    "2033": "29997",
    "2034": "32922",
    "2035": "35661",
    "2036": "38518",
    "2037": "40661",
    "2038": "42016",
    "2039": "42985",
    "2040": "43859",
    "2041": "44355",
    "2042": "44596",
    "2043": "45730",
    "2044": "47249",
    "2045": "49410",
    "2046": "52411",
    "2047": "57392",
    "2048": "61207",
    "2049": "64167",
    "2050": "66765",
    "Age": "75-79"
  },
  {
    "2021": "7887",
    "2022": "8208",
    "2023": "7665",
    "2024": "6813",
    "2025": "6385",
    "2026": "6314",
    "2027": "6876",
    "2028": "7677",
    "2029": "8839",
    "2030": "10665",
    "2031": "11867",
    "2032": "12933",
    "2033": "13991",
    "2034": "15108",
    "2035": "15952",
    "2036": "17350",
    "2037": "18873",
    "2038": "20984",
    "2039": "23165",
    "2040": "25219",
    "2041": "27391",
    "2042": "29045",
    "2043": "30161",
    "2044": "31011",
    "2045": "31809",
    "2046": "32366",
    "2047": "32703",
    "2048": "33729",
    "2049": "35035",
    "2050": "36837",
    "Age": "80-84"
  },
  {
    "2021": "3866",
    "2022": "4123",
    "2023": "4474",
    "2024": "4787",
    "2025": "4944",
    "2026": "5285",
    "2027": "5589",
    "2028": "5463",
    "2029": "5160",
    "2030": "5034",
    "2031": "5235",
    "2032": "5790",
    "2033": "6223",
    "2034": "6766",
    "2035": "7815",
    "2036": "8662",
    "2037": "9636",
    "2038": "10520",
    "2039": "11505",
    "2040": "12631",
    "2041": "13978",
    "2042": "15480",
    "2043": "17300",
    "2044": "19226",
    "2045": "21154",
    "2046": "23307",
    "2047": "25210",
    "2048": "26974",
    "2049": "28629",
    "2050": "30262",
    "Age": "85+"
  }
]

# Convert age ranges to min/max values
def get_age_min_max(age_str):
    if age_str == "Total":
        return 0, None  # For total population, use 0 as min age
    elif age_str == "85+":
        return 85, None
    elif '-' in age_str:
        age_parts = age_str.split('-')
        return int(age_parts[0]), int(age_parts[1])
    return None, None

# Delete existing Navoi male data
StatisticsData.objects.filter(region=tashkent_city_region, gender='jami').delete()

# Import new data
with transaction.atomic():
    for entry in navoi_male_data:
        age_min, age_max = get_age_min_max(entry['Age'])
        for year in range(2021, 2051):
            year_str = str(year)
            if year_str in entry:
                population = int(entry[year_str])
                StatisticsData.objects.create(
                    region=tashkent_city_region,
                    year=year,
                    age_min=age_min,
                    age_max=age_max,
                    gender='jami',
                    population=population
                )

print("Navoi female data import completed successfully!")
